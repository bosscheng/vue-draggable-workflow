{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/expandNodeForm.vue?33f8","webpack:///./src/App.vue?c007","webpack:///./src/components/Workflow.vue?bb6e","webpack:///./src/constant/index.js","webpack:///./src/utils/index.js","webpack:///./src/utils/dom.js","webpack:///./src/components/listForm.vue?5e39","webpack:///src/components/listForm.vue","webpack:///./src/components/listForm.vue?ddb1","webpack:///./src/components/listForm.vue","webpack:///./src/components/startNodeForm.vue?dfeb","webpack:///src/components/startNodeForm.vue","webpack:///./src/components/startNodeForm.vue?c3cf","webpack:///./src/components/startNodeForm.vue","webpack:///./src/components/nodeNodeForm.vue?fa53","webpack:///src/components/nodeNodeForm.vue","webpack:///./src/components/nodeNodeForm.vue?def6","webpack:///./src/components/nodeNodeForm.vue","webpack:///./src/components/ifNodeForm.vue?6347","webpack:///src/components/ifNodeForm.vue","webpack:///./src/components/ifNodeForm.vue?5428","webpack:///./src/components/ifNodeForm.vue","webpack:///./src/components/expandNodeForm.vue?6f43","webpack:///src/components/expandNodeForm.vue","webpack:///./src/components/expandNodeForm.vue?4b4b","webpack:///./src/components/expandNodeForm.vue","webpack:///src/components/Workflow.vue","webpack:///./src/components/Workflow.vue?e4a7","webpack:///./src/components/Workflow.vue","webpack:///src/App.vue","webpack:///./src/App.vue?a7d1","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/components/listForm.vue?42d3","webpack:///./src/components/Workflow.vue?c04b","webpack:///./src/components/Draggable.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","staticClass","on","handleSort","handleUndo","handleClear","handleGetData","$event","toggleGridLine","class","toggleGridLineClass","canvasDataRoom","canvasRoomMinusEnable","handleMinusCanvas","canvasRoomPlusEnable","handlePlusCanvas","ref","style","_l","flowItem","index","uuid","left","top","handleFlowMoveDown","event","handleChangeFlowPosition","stopPropagation","handleEditFlowItem","refInFor","pull","put","groupType","flowTypeConstant","action","className","_v","_s","formData","stepName","handleDeleteFlowItem","condition","ifNodeTitle","_e","flow","type","flowItemTypeConstant","startNode","temp","_b","children","handleFlowMoveItem","handleFlowMoveStart","handleFlowMoveEnd","dragConfig","item","hidden","id","dialogObj","visible","$set","editType","list","handleSelectFlowItem","slot","handleGoList","dialogFlowItemComponent","tag","editForm","handleCloseDialog","handleTempFlowFormData","dialogVisible","FLOW_TYPE","FLOW_ITEM_TYPE","endNode","waitNode","tempNode","nodeNode","ifNode","expandNode","FLOW_LIST","FLOW_ALL_LIST","replace","Math","random","v","toString","clone","obj","JSON","stringify","parse","trim","str","reExtraSpace","addClass","element","classNames","curClassNames","classes","split","len","classItem","classList","add","hasClass","removeClass","remove","indexOf","Error","contains","_getStyle","dom","getComputedStyle","currentStyle","e","getWidth","width","offsetWidth","parseFloat","handleClick","component","rules","tempItem","staticStyle","model","callback","$$v","expression","ruleItem","handleRemoveRuleGroup","handleCreateRuleGroup","Vue","config","productionTip","use","ElementUI","render","h","App","$mount","Sortable","require","getConsole","console","global","buildAttribute","propName","undefined","removeNode","node","parentElement","removeChild","insertNodeAt","fatherNode","position","refNode","nextSibling","insertBefore","computeVmIndex","vnodes","map","elt","elm","computeIndexes","slots","isTransition","elmFromNodes","rawIndexes","filter","ind","emit","evtName","evtData","$nextTick","$emit","toLowerCase","delegateAndEmit","realList","groupIsClone","group","eventsListened","eventsToEmit","readonlyProperties","evt","draggingElement","props","options","Array","required","default","noTransitionOnDrag","Boolean","Function","original","String","move","componentData","draggableComponent","inheritAttrs","transitionMode","noneFunctionalComponentMode","init","isCloning","$slots","child","componentOptions","includes","headerOffset","header","footer","attributes","update","getTag","created","error","warn","mounted","$el","nodeName","optionsAdded","forEach","assign","$attrs","onMove","originalEvent","onDragMove","draggable","_sortable","rootContainer","beforeDestroy","destroy","computed","watch","handler","newOptionValue","updateOptions","deep","methods","getIsCloning","groupConsideringOption","getOptionGroup","option","getChildrenNodes","$children","rawNodes","visibleIndexes","getUnderlyingVm","htmlElt","getUnderlyingPotencialDraggableComponent","__vue__","$options","_componentTag","$parent","emitChanges","alterList","onList","newList","spliceList","arguments","updatePosition","oldIndex","newIndex","getRelatedContextFromMoveEvent","to","related","context","destination","getVmIndex","domIndex","indexes","numberIndexes","getComponent","componentInstance","resetTransitionData","nodes","transitionContainer","kept","onDragStart","_underlying_vm_","onDragAdd","added","onDragRemove","removed","onDragUpdate","from","moved","updateProperty","propertyName","computeFutureIndex","relatedContext","domChildren","el","currentDOMIndex","currentIndex","draggedInList","willInsertAfter","draggedContext","futureIndex","onDragEnd"],"mappings":"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","file":"js/app.faa095d6.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue-draggable-workflow/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./expandNodeForm.vue?vue&type=style&index=0&id=c2eb94a2&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./expandNodeForm.vue?vue&type=style&index=0&id=c2eb94a2&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('workflow')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flow-layout\"},[_c('div',{staticClass:\"flow-editor\"},[_c('div',{staticClass:\"flow-tools\"},[_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"自动排列\",\"placement\":\"top-start\"}},[_c('div',{staticClass:\"tool-item\",attrs:{\"title\":\"\"},on:{\"click\":_vm.handleSort}},[_c('span',{staticClass:\"icon-duiqi\"})])]),_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"撤销\",\"placement\":\"top-start\"}},[_c('div',{staticClass:\"tool-item\",on:{\"click\":_vm.handleUndo}},[_c('span',{staticClass:\"icon-undo\"})])]),_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"重做\",\"placement\":\"top-start\"}},[_c('div',{staticClass:\"tool-item\",on:{\"click\":_vm.handleClear}},[_c('span',{staticClass:\"icon-redo\"})])]),_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"获取JSON数据\",\"placement\":\"top-start\"}},[_c('div',{staticClass:\"tool-item\",on:{\"click\":_vm.handleGetData}},[_c('span',{staticClass:\"icon-json\"})])]),_c('el-tooltip',{staticClass:\"item\",attrs:{\"effect\":\"dark\",\"content\":\"网格\",\"placement\":\"top-start\"}},[_c('div',{staticClass:\"tool-item\",on:{\"click\":function($event){_vm.toggleGridLine = !_vm.toggleGridLine}}},[_c('span',{class:_vm.toggleGridLineClass})])])],1),_c('div',{staticClass:\"flow-zoom\",attrs:{\"data-zoom\":_vm.canvasDataRoom + '%'}},[_c('div',{staticClass:\"zoom-btn\"},[_c('el-button',{class:{'el-button--primary':_vm.canvasRoomMinusEnable},attrs:{\"size\":\"mini\",\"icon\":\"el-icon-minus\",\"circle\":\"\"},on:{\"click\":_vm.handleMinusCanvas}})],1),_c('div',{staticClass:\"zoom-btn\"},[_c('el-button',{class:{'el-button--primary':_vm.canvasRoomPlusEnable},attrs:{\"size\":\"mini\",\"icon\":\"el-icon-plus\",\"circle\":\"\"},on:{\"click\":_vm.handlePlusCanvas}})],1)]),_c('div',{staticClass:\"canvas-container\",class:{'show-grid':_vm.toggleGridLine},attrs:{\"data-zoom\":_vm.canvasDataRoom}},[_c('div',{ref:\"campaignCanvas\",style:(_vm.canvasRoomScaleStyle),attrs:{\"id\":\"campaignCanvas\"}},[_vm._l((_vm.flowList),function(flowItem,index){return [_c('div',{key:flowItem.uuid,staticClass:\"node-content-wrap\",style:({left:flowItem.left+'px',top:flowItem.top+'px'}),attrs:{\"id\":flowItem.uuid},on:{\"mousedown\":_vm.handleFlowMoveDown,\"mouseup\":function (event){_vm.handleChangeFlowPosition(flowItem,event)},\"click\":function($event){$event.stopPropagation();return (function (event){_vm.handleEditFlowItem(flowItem,event)})($event)}}},[_c('div',{staticClass:\"node-content\"},[_c('draggable',{ref:flowItem.uuid,refInFor:true,staticClass:\"node-temp-small\",attrs:{\"group\":{name:'sortable', pull:false, put: true }}}),(flowItem.groupType === _vm.flowTypeConstant.action)?[_c('div',{staticClass:\"flow-item node\"},[_c('div',{staticClass:\"step-img\",class:flowItem.className}),_c('div',{staticClass:\"step-title\"},[_vm._v(_vm._s(flowItem.name))])]),_c('div',{staticClass:\"flow-text\"},[_c('div',{staticClass:\"text-line\"},[_c('span',[_vm._v(_vm._s(flowItem.formData && flowItem.formData.stepName))]),_c('i',{staticClass:\"el-icon-close flow-delete\",on:{\"click\":function($event){$event.stopPropagation();return _vm.handleDeleteFlowItem(flowItem)}}})])])]:(flowItem.groupType === _vm.flowTypeConstant.condition)?[_c('div',{staticClass:\"flow-item node-square\"},[_c('div',{staticClass:\"square\"},[_c('div',{staticClass:\"step-img\",class:flowItem.className})])]),_c('div',{staticClass:\"flow-text\"},[_c('div',{staticClass:\"text-line\"},[_c('span',[_vm._v(_vm._s(flowItem.formData && flowItem.formData.stepName))]),_c('i',{staticClass:\"el-icon-close flow-delete\",on:{\"click\":function($event){$event.stopPropagation();return _vm.handleDeleteFlowItem(flowItem)}}})]),_c('div',{staticClass:\"text-line1\"},[(flowItem.formData && flowItem.formData.ifNodeTitle)?[_c('span',{staticClass:\"text-content\"},[_vm._v(_vm._s(flowItem.formData.ifNodeTitle))])]:_vm._e()],2)])]:(flowItem.groupType === _vm.flowTypeConstant.flow)?[_c('div',{staticClass:\"flow-item node node-circle\"},[_c('div',{staticClass:\"step-img\",class:flowItem.className})]),_c('div',{staticClass:\"flow-text\"},[_c('div',{staticClass:\"text-line\"},[_c('span',[_vm._v(_vm._s(flowItem.formData && flowItem.formData.stepName))]),(flowItem.type !== _vm.flowItemTypeConstant.startNode)?_c('i',{staticClass:\"el-icon-close flow-delete\",on:{\"click\":function($event){$event.stopPropagation();return _vm.handleDeleteFlowItem(flowItem)}}}):_vm._e()])])]:_vm._e(),(flowItem.groupType === _vm.flowTypeConstant.temp )?[_c('draggable',{ref:\"tempNode\",refInFor:true,staticClass:\"flow-item node-temp node-temp-img\",attrs:{\"id\":flowItem.uuid,\"group\":{name:'sortable', pull:false, put: true }}})]:_vm._e()],2)])]})],2)]),_c('div',{staticClass:\"flow-editor-sidebar\"},[_vm._l((_vm.flowAllList),function(flowItem,index){return [_c('draggable',_vm._b({key:index,ref:flowItem.ref,refInFor:true,staticClass:\"items-box\",attrs:{\"list\":flowItem.children,\"group\":{name:'sortable', pull: 'clone', put: false },\"move\":_vm.handleFlowMoveItem,\"sort\":false},on:{\"start\":_vm.handleFlowMoveStart,\"end\":_vm.handleFlowMoveEnd}},'draggable',_vm.dragConfig,false),[_vm._l((flowItem.children),function(item,index){return [(flowItem.type === _vm.flowTypeConstant.action)?[(!item.hidden)?_c('div',{key:index,staticClass:\"node\",attrs:{\"title\":item.name,\"data-id\":item.id,\"data-type\":item.type,\"data-group\":item.groupType}},[_c('div',{staticClass:\"step-img\",class:item.className}),_c('div',{staticClass:\"step-title\"},[_vm._v(_vm._s(item.name))])]):_vm._e()]:(flowItem.type === _vm.flowTypeConstant.flow)?[(!item.hidden)?_c('div',{key:index,staticClass:\"node node-circle\",attrs:{\"title\":item.name,\"data-id\":item.id,\"data-type\":item.type,\"data-group\":item.groupType}},[_c('div',{staticClass:\"step-img\",class:item.className})]):_vm._e()]:(flowItem.type === _vm.flowTypeConstant.condition)?[(!item.hidden)?_c('div',{key:index,staticClass:\"node-square\",attrs:{\"title\":item.name,\"data-id\":item.id,\"data-type\":item.type,\"data-group\":item.groupType}},[_c('div',{staticClass:\"square\"},[_c('div',{staticClass:\"step-img\",class:item.className})])]):_vm._e()]:_vm._e()]})],2)]})],2)]),_c('el-dialog',{staticClass:\"dialog-wrap\",attrs:{\"visible\":_vm.dialogObj.visible,\"show-close\":false,\"width\":\"500px\"},on:{\"update:visible\":function($event){return _vm.$set(_vm.dialogObj, \"visible\", $event)}}},[(_vm.dialogObj.editType === _vm.flowItemTypeConstant.list)?[_c('list-form',{on:{\"handleCheck\":_vm.handleSelectFlowItem}})]:[_c('div',{staticClass:\"dialog-title\",attrs:{\"slot\":\"title\"},slot:\"title\"},[(_vm.dialogObj.editType !== _vm.flowItemTypeConstant.startNode)?_c('i',{staticClass:\"el-icon-arrow-left\",on:{\"click\":_vm.handleGoList}}):_vm._e(),_c('span',{staticClass:\"desc\"},[_vm._v(_vm._s(_vm.dialogObj.editType))])]),_c('div',{staticClass:\"dialog-body\"},[(_vm.dialogObj.editType)?[_c(_vm.dialogFlowItemComponent,{ref:\"flowEditComponent\",tag:\"component\",attrs:{\"editItem\":_vm.dialogObj.editForm},on:{\"update:editItem\":function($event){return _vm.$set(_vm.dialogObj, \"editForm\", $event)},\"update:edit-item\":function($event){return _vm.$set(_vm.dialogObj, \"editForm\", $event)}}})]:_vm._e()],2)],_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":_vm.handleCloseDialog}},[_vm._v(\"取 消\")]),(_vm.dialogObj.editType !== _vm.flowItemTypeConstant.list)?_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.handleTempFlowFormData}},[_vm._v(\"确 定\")]):_vm._e()],1)],2),_c('el-dialog',{attrs:{\"title\":\"JSON数据\",\"visible\":_vm.dialogVisible,\"width\":\"700px\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[(_vm.dialogVisible)?_c('div',{ref:\"preShow\",staticClass:\"pre-show\"}):_vm._e(),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"关 闭\")])],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\n* date: 2020-01-17\n* desc:\n*/\n\n\nexport const FLOW_TYPE = {\n    action: 'action',\n    condition: 'condition',\n    flow: 'flow',\n    temp: 'temp',\n};\n\nexport const FLOW_ITEM_TYPE = {\n    startNode: 'startNode',\n    endNode: 'endNode',\n    waitNode: 'waitNode',\n    tempNode: 'tempNode',\n    nodeNode: 'nodeNode',\n    ifNode: 'ifNode',\n    expandNode: 'expandNode',\n    list: 'list'\n};\n\n\nexport const FLOW_LIST = {\n    action: [\n        {\n            id: 'nodeNode',\n            type: 'nodeNode',\n            className: 'step-tag',\n            name: '节点',\n            groupType: 'action',\n        }\n    ],\n    // 条件控制\n    condition: [\n        {\n            id: 'conditionNode',\n            type: 'ifNode',\n            className: 'step-if',\n            name: '条件判断',\n            groupType: 'condition',\n        },\n        {\n            id: 'switchNode',\n            type: 'expandNode',\n            className: 'step-expand',\n            name: '条件分组',\n            groupType: 'condition',\n        }\n    ],\n    // 流程控制\n    flow: [\n        {\n            id: 'startNode',\n            type: 'startNode',\n            className: 'step-start',\n            name: 'start',\n            groupType: 'flow',\n            hidden: true\n        },\n        {\n            id: 'stopNode',\n            type: 'endNode',\n            className: 'step-end',\n            name: '结束',\n            groupType: 'flow',\n        }\n    ],\n    // temp\n    temp: [\n        {\n            id: 'tempNode',\n            type: 'tempNode',\n            className: 'step-temp',\n            name: 'temp',\n            groupType: 'temp',\n        },\n    ]\n};\n\nexport const FLOW_ALL_LIST = [\n    {\n        type: FLOW_TYPE.action,\n        ref: 'actionFlow',\n        children: FLOW_LIST.action\n    },\n    {\n        type: FLOW_TYPE.flow,\n        ref: 'flowFlow',\n        children: FLOW_LIST.flow\n    },\n    {\n        type: FLOW_TYPE.condition,\n        ref: 'conditionFlow',\n        children: FLOW_LIST.condition\n    },\n];\n","/**\n * Date:2020/4/15\n * Desc:\n */\n\n//\nexport function uuid() {\n// return (+new Date() * 1e6 + Math.floor(Math.random() * 1e6)).toString(36);\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0;\n        var v = c == 'x' ? r : (r & 0x3 | 0x8)\n        return v.toString(16)\n    })\n}\n\n//\nexport function clone(obj) {\n    let result = '';\n    //\n    if (typeof obj === 'object') {\n        result = JSON.stringify(obj);\n        result = JSON.parse(result);\n    } else {\n        result = obj;\n    }\n\n    return result;\n}\n","/*\n* date: 2019-08-21\n* desc:\n*/\n\nvar trim = function (str) {\n  //\n  var reExtraSpace = /^\\s*(.*?)\\s+$/;\n\n  return str.replace(reExtraSpace, '$1');\n};\n\n/**\n *\n * @param element DOM 元素。\n * @param classNames String 用字符串分割开来。\n */\nexport function addClass(element, classNames) {\n\n  if (!element || !classNames) {\n    return;\n  }\n\n  var curClassNames = element.className;\n  // 用空格分来\n  var classes = (classNames || '').split(' ');\n\n  for (var i = 0, len = classes.length; i < len; i++) {\n    var classItem = classes[i];\n    if (!classItem) {\n      continue;\n    }\n\n    if (element.classList) {\n      element.classList.add(classItem);\n    } else if (!hasClass(element, classItem)) {\n      curClassNames += ' ' + classItem;\n    }\n  }\n\n  if (!element.classList) {\n    element.className = curClassNames;\n  }\n}\n\n/**\n *\n * @param element\n * @param classNames\n */\nexport function removeClass(element, classNames) {\n  if (!element || !classNames) {\n    return;\n  }\n\n  var curClassNames = ' ' + element.className + ' ';\n  // 用空格分来\n  var classes = (classNames || '').split(' ');\n\n  for (var i = 0, len = classes.length; i < len; i++) {\n    var classItem = classes[i];\n    if (!classItem) {\n      continue;\n    }\n\n    if (element.classList) {\n      element.classList.remove(classItem);\n    } else if (!hasClass(element, classItem)) {\n      curClassNames = curClassNames.replace(' ' + classItem + ' ', ' ');\n    }\n  }\n\n  if (!element.classList) {\n    element.className = trim(curClassNames);\n  }\n}\n\n\n/**\n *\n * @param element Element 元素\n * @param className\n * @returns {boolean}\n */\nexport function hasClass(element, className) {\n  if (!element || !className) {\n    return false;\n  }\n\n  //\n  if (className.indexOf(' ') !== -1) {\n    throw new Error('classNames should not contain space');\n  }\n\n\n  if (element.classList) {\n    return element.classList.contains(className);\n  } else {\n    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;\n  }\n}\n\n\n// 依赖 getStyle\nfunction _getStyle(dom, name) {\n  try {\n    if (window.getComputedStyle) {\n      return window.getComputedStyle(dom, null)[name];\n    }\n    //\n    return dom.currentStyle[name];\n  } catch (e) {\n    return null;\n  }\n}\n\n//\nexport function getWidth(dom) {\n  let width = _getStyle(dom, 'width');\n  if (width === 'auto') {\n    width = dom.offsetWidth;\n  }\n  return parseFloat(width);\n}\n\n//\nexport function getHeight(dom) {\n  let height = _getStyle(dom, 'height');\n  if (height === 'auto') {\n    height = dom.offsetHeight;\n  }\n  return parseFloat(height);\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._l((_vm.flowAllList),function(flowItem){return [_c('div',{staticClass:\"items-box\"},[_vm._l((flowItem.children),function(item,index){return [(flowItem.type === _vm.flowTypeConstant.action)?[(!item.hidden)?_c('div',{staticClass:\"node\",on:{\"click\":function($event){return _vm.handleClick(item)}}},[_c('div',{staticClass:\"step-img\",class:item.className}),_c('div',{staticClass:\"step-title\"},[_vm._v(_vm._s(item.name))])]):_vm._e()]:(flowItem.type === _vm.flowTypeConstant.flow)?[(!item.hidden)?_c('div',{staticClass:\"node node-circle\",on:{\"click\":function($event){return _vm.handleClick(item)}}},[_c('div',{staticClass:\"step-img\",class:item.className})]):_vm._e()]:(flowItem.type === _vm.flowTypeConstant.condition)?[(!item.hidden)?_c('div',{staticClass:\"node-square\",on:{\"click\":function($event){return _vm.handleClick(item)}}},[_c('div',{staticClass:\"square\"},[_c('div',{staticClass:\"step-img\",class:item.className})])]):_vm._e()]:_vm._e()]})],2)]})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <template v-for=\"flowItem in flowAllList\">\n      <div class=\"items-box\">\n        <template v-for=\"(item,index) in flowItem.children\">\n          <template v-if=\"flowItem.type === flowTypeConstant.action\">\n            <div class=\"node\" @click=\"handleClick(item)\" v-if=\"!item.hidden\">\n              <div class=\"step-img\" :class=\"item.className\"></div>\n              <div class=\"step-title\">{{item.name}}</div>\n            </div>\n          </template>\n          <template v-else-if=\"flowItem.type === flowTypeConstant.flow\">\n            <div class=\"node node-circle\" @click=\"handleClick(item)\" v-if=\"!item.hidden\">\n              <div class=\"step-img\" :class=\"item.className\"></div>\n            </div>\n          </template>\n          <template v-else-if=\"flowItem.type === flowTypeConstant.condition\">\n            <div class=\"node-square\" @click=\"handleClick(item)\" v-if=\"!item.hidden\">\n              <div class=\"square\">\n                <div class=\"step-img\" :class=\"item.className\"></div>\n              </div>\n            </div>\n          </template>\n        </template>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\n  import {FLOW_ALL_LIST, FLOW_TYPE} from \"../constant\";\n\n  export default {\n    name: \"ListForm\",\n    data() {\n      return {\n        flowAllList: FLOW_ALL_LIST,\n        flowTypeConstant: FLOW_TYPE,\n\n      }\n    },\n    methods: {\n      handleClick(flowItem) {\n        this.$emit('handleCheck', flowItem);\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n\n  .items-box {\n    border: 1px solid #eee;\n    border-radius: 4px;\n\n    margin-bottom: 5px;\n    padding-top: 15px;\n\n    &:last-child {\n      margin-bottom: 0;\n    }\n\n\n    .node-square {\n      margin-bottom: 15px;\n    }\n  }\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./listForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./listForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./listForm.vue?vue&type=template&id=1b772e52&scoped=true&\"\nimport script from \"./listForm.vue?vue&type=script&lang=js&\"\nexport * from \"./listForm.vue?vue&type=script&lang=js&\"\nimport style0 from \"./listForm.vue?vue&type=style&index=0&id=1b772e52&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1b772e52\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-form',{ref:\"dataForm\",attrs:{\"rules\":_vm.rules,\"model\":_vm.tempItem,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"名称\",\"prop\":\"stepName\"}},[_c('el-input',{staticStyle:{\"width\":\"200px\"},attrs:{\"size\":\"small\"},model:{value:(_vm.tempItem.stepName),callback:function ($$v) {_vm.$set(_vm.tempItem, \"stepName\", $$v)},expression:\"tempItem.stepName\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <el-form :rules=\"rules\" ref=\"dataForm\" :model=\"tempItem\" label-width=\"80px\">\n            <el-form-item label=\"名称\" prop=\"stepName\">\n                <el-input size=\"small\" v-model=\"tempItem.stepName\" style=\"width: 200px\"></el-input>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n\n<script>\n\n    import {clone} from \"@/utils\";\n\n    function _getTempItem() {\n        return {\n            stepName: '新建',\n        }\n    }\n\n    export default {\n        name: \"StartNodeForm\",\n        props: {\n            editItem: {\n                type: Object,\n            }\n        },\n        data() {\n            return {\n                tempItem: _getTempItem(),\n                rules: {\n                    stepName: [{required: true, trigger: 'blur', message: '请填写名称'}],\n                }\n            }\n        },\n        created() {\n            if (this.editItem && this.editItem.stepName) {\n                this.tempItem = clone(this.editItem);\n            }\n        },\n\n        methods: {\n            //\n            validateFormData() {\n                return new Promise((resolve, reject) => {\n\n                    this.$refs['dataForm'].validate((valid) => {\n                        if (!valid) {\n                            reject();\n                            return;\n                        }\n                        resolve();\n                    })\n                });\n            },\n\n            formData() {\n                let tempItem = clone(this.tempItem);\n                return tempItem\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./startNodeForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./startNodeForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./startNodeForm.vue?vue&type=template&id=9a7d79b6&scoped=true&\"\nimport script from \"./startNodeForm.vue?vue&type=script&lang=js&\"\nexport * from \"./startNodeForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"9a7d79b6\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-form',{ref:\"dataForm\",attrs:{\"rules\":_vm.rules,\"model\":_vm.tempItem,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"名称\",\"prop\":\"stepName\"}},[_c('el-input',{staticStyle:{\"width\":\"200px\"},attrs:{\"size\":\"small\"},model:{value:(_vm.tempItem.stepName),callback:function ($$v) {_vm.$set(_vm.tempItem, \"stepName\", $$v)},expression:\"tempItem.stepName\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <el-form :rules=\"rules\" ref=\"dataForm\" :model=\"tempItem\" label-width=\"80px\">\n            <el-form-item label=\"名称\" prop=\"stepName\">\n                <el-input size=\"small\" v-model=\"tempItem.stepName\" style=\"width: 200px\"></el-input>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n\n<script>\n\n    import {clone} from \"@/utils\";\n\n    function _getTempItem() {\n        return {\n            stepName: '节点',\n        }\n    }\n\n    export default {\n        name: \"nodeNodeForm\",\n        props: {\n            editItem: {\n                type: Object,\n            }\n        },\n        data() {\n            return {\n                tempItem: _getTempItem(),\n                rules: {\n                    stepName: [{required: true, trigger: 'blur', message: '请填写名称'}],\n                }\n            }\n        },\n        created() {\n            if (this.editItem && this.editItem.stepName) {\n                this.tempItem = clone(this.editItem);\n            }\n        },\n\n        methods: {\n            //\n            validateFormData() {\n                return new Promise((resolve, reject) => {\n\n                    this.$refs['dataForm'].validate((valid) => {\n                        if (!valid) {\n                            reject();\n                            return;\n                        }\n                        resolve();\n                    })\n                });\n            },\n\n            formData() {\n                let tempItem = clone(this.tempItem);\n                return tempItem\n            }\n        }\n    }\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./nodeNodeForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./nodeNodeForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./nodeNodeForm.vue?vue&type=template&id=f5f0e5f8&scoped=true&\"\nimport script from \"./nodeNodeForm.vue?vue&type=script&lang=js&\"\nexport * from \"./nodeNodeForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f5f0e5f8\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"if-node-form\"},[_c('el-form',{ref:\"dataForm\",attrs:{\"rules\":_vm.rules,\"model\":_vm.tempItem,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"步骤名称\",\"prop\":\"stepName\"}},[_c('el-input',{staticStyle:{\"width\":\"200px\"},attrs:{\"size\":\"small\"},model:{value:(_vm.tempItem.stepName),callback:function ($$v) {_vm.$set(_vm.tempItem, \"stepName\", $$v)},expression:\"tempItem.stepName\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"if-node-form\">\n        <el-form :rules=\"rules\" ref=\"dataForm\" :model=\"tempItem\" label-width=\"80px\">\n            <el-form-item label=\"步骤名称\" prop=\"stepName\">\n                <el-input size=\"small\" v-model=\"tempItem.stepName\" style=\"width: 200px\"></el-input>\n            </el-form-item>\n        </el-form>\n    </div>\n</template>\n\n<script>\n    import {clone} from \"@/utils\";\n\n\n    function getTempItem() {\n        return {\n            stepName: '条件判断',\n        };\n    }\n\n\n    export default {\n        name: \"IfNodeForm\",\n        props: {\n            editItem: {\n                type: Object,\n            }\n        },\n        created() {\n            if (this.editItem && this.editItem.stepName) {\n                let tempItem = clone(this.editItem);\n                this.updateData(tempItem);\n            }\n            this.init();\n        },\n\n        data() {\n            return {\n                tempItem: getTempItem(),\n                rules: {\n                    stepName: [{required: true, trigger: 'blur', message: '请填写名称'}],\n                }\n            };\n        },\n\n        methods: {\n\n            init() {\n\n            },\n\n            updateData(tempItem) {\n                this.tempItem.stepName = tempItem.stepName;\n            },\n\n            validateFormData() {\n                return new Promise((resolve, reject) => {\n                    this.$refs['dataForm'].validate((valid) => {\n                        if (!valid) {\n                            reject();\n                            return;\n                        }\n                        resolve();\n                    });\n                });\n            },\n\n            formData() {\n                let tempItem = clone(this.tempItem);\n                return tempItem;\n            }\n        }\n    };\n</script>\n\n\n<style lang=\"scss\" scoped>\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ifNodeForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ifNodeForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ifNodeForm.vue?vue&type=template&id=783c604f&scoped=true&\"\nimport script from \"./ifNodeForm.vue?vue&type=script&lang=js&\"\nexport * from \"./ifNodeForm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"783c604f\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-form',{ref:\"dataForm\",attrs:{\"rules\":_vm.rules,\"model\":_vm.tempItem,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"步骤名称\",\"prop\":\"stepName\"}},[_c('el-input',{staticStyle:{\"width\":\"200px\"},attrs:{\"size\":\"small\"},model:{value:(_vm.tempItem.stepName),callback:function ($$v) {_vm.$set(_vm.tempItem, \"stepName\", $$v)},expression:\"tempItem.stepName\"}})],1),_c('el-form-item',{attrs:{\"label\":\"分支\",\"prop\":\"stepName\"}},[_vm._l((_vm.tempItem.ruleGroupList),function(ruleItem,index){return [_c('div',{staticClass:\"expand-item\"},[_c('span',{staticClass:\"expand-title\"},[_vm._v(\"分支\"+_vm._s(index+1)+\" \")]),_c('span',{staticClass:\"expand-content\"},[_c('el-input',{attrs:{\"size\":\"small\",\"placeholder\":\"placeholder\"},model:{value:(ruleItem.name),callback:function ($$v) {_vm.$set(ruleItem, \"name\", $$v)},expression:\"ruleItem.name\"}})],1),_c('span',{staticClass:\"el-icon-btn el-icon-remove\",attrs:{\"title\":\"删除分支\"},on:{\"click\":function($event){return _vm.handleRemoveRuleGroup(index)}}})])]}),_c('div',{staticClass:\"el-icon-btn rule-content-tips el-icon-circle-plus\",attrs:{\"title\":\"创建分支\"},on:{\"click\":_vm.handleCreateRuleGroup}})],2)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <el-form :rules=\"rules\" ref=\"dataForm\" :model=\"tempItem\" label-width=\"80px\">\n            <el-form-item label=\"步骤名称\" prop=\"stepName\">\n                <el-input size=\"small\" v-model=\"tempItem.stepName\" style=\"width: 200px\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"分支\" prop=\"stepName\">\n                <template v-for=\"(ruleItem,index) in tempItem.ruleGroupList\">\n                    <div class=\"expand-item\">\n                        <span class=\"expand-title\">分支{{index+1}} </span>\n                        <span class=\"expand-content\">\n                            <el-input size=\"small\" v-model=\"ruleItem.name\" placeholder=\"placeholder\"></el-input>\n                        </span>\n\n                        <span title=\"删除分支\" class=\"el-icon-btn el-icon-remove\"\n                              @click=\"handleRemoveRuleGroup(index)\"></span>\n                    </div>\n                </template>\n                <div title=\"创建分支\" class=\"el-icon-btn rule-content-tips el-icon-circle-plus\"\n                     @click=\"handleCreateRuleGroup\"></div>\n            </el-form-item>\n        </el-form>\n\n    </div>\n</template>\n\n<script>\n    import {clone} from \"../utils\";\n\n\n    function getTempItem() {\n        return {\n            stepName: '条件分组',\n            ruleGroupList: [{\n                name: ''\n            }]\n        };\n    }\n\n    export default {\n        name: \"ExpandNodeForm\",\n        props: {\n            editItem: {\n                type: Object,\n            }\n        },\n        data() {\n            return {\n                tempItem: getTempItem(),\n                rules: {\n                    stepName: [{required: true, trigger: 'blur', message: '请填写名称'}],\n                }\n            };\n        },\n\n        created() {\n            if (this.editItem && this.editItem.stepName) {\n                let tempItem = clone(this.editItem);\n                this.updateData(tempItem);\n            }\n        },\n\n        methods: {\n\n            updateData(tempItem) {\n                this.tempItem = tempItem;\n            },\n\n            validateFormData() {\n                return new Promise((resolve, reject) => {\n                    this.$refs['dataForm'].validate((valid) => {\n                        if (!valid) {\n                            reject();\n                            return;\n                        }\n                        resolve();\n                    });\n                });\n            },\n\n            formData() {\n                let tempItem = clone(this.tempItem);\n                return tempItem;\n            },\n\n            handleCreateRuleGroup() {\n                this.tempItem.ruleGroupList.push({\n                    name: ''\n                });\n            },\n\n            handleRemoveRuleGroup(index) {\n                this.tempItem.ruleGroupList.splice(index, 1);\n\n                if (this.tempItem.ruleGroupList.length === 0) {\n                    this.handleCreateRuleGroup();\n                }\n            },\n\n            _message(msg, type) {\n                this.$message({\n                    type: type || 'error',\n                    message: msg\n                });\n            },\n        }\n\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n\n\n    .expand-item {\n        border: 1px solid #e7e7e7;\n        border-radius: 4px;\n        position: relative;\n        margin-bottom: 5px;\n\n        span {\n            display: inline-block;\n        }\n\n        .expand-title {\n            position: absolute;\n            font-size: 12px;\n            display: flex;\n            align-items: center;\n            justify-items: center;\n            width: 33px;\n            height: 100%;\n            color: #fff;\n            background: #87cefa;\n            border: 1px solid #87cefa;\n        }\n\n        .expand-content {\n            margin-left: 38px;\n            max-width: 340px;\n            vertical-align: middle;\n            line-height: 22px;\n        }\n    }\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./expandNodeForm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./expandNodeForm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./expandNodeForm.vue?vue&type=template&id=c2eb94a2&scoped=true&\"\nimport script from \"./expandNodeForm.vue?vue&type=script&lang=js&\"\nexport * from \"./expandNodeForm.vue?vue&type=script&lang=js&\"\nimport style0 from \"./expandNodeForm.vue?vue&type=style&index=0&id=c2eb94a2&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c2eb94a2\",\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div class=\"flow-layout\">\n        <div class=\"flow-editor\">\n            <div class=\"flow-tools\">\n                <el-tooltip class=\"item\" effect=\"dark\" content=\"自动排列\" placement=\"top-start\">\n                    <div class=\"tool-item\" title=\"\" @click=\"handleSort\">\n                        <span class=\"icon-duiqi\"></span>\n                    </div>\n                </el-tooltip>\n                <el-tooltip class=\"item\" effect=\"dark\" content=\"撤销\" placement=\"top-start\">\n                    <div class=\"tool-item\" @click=\"handleUndo\">\n                        <span class=\"icon-undo\"></span>\n                    </div>\n                </el-tooltip>\n                <el-tooltip class=\"item\" effect=\"dark\" content=\"重做\" placement=\"top-start\">\n                    <div class=\"tool-item\" @click=\"handleClear\">\n                        <span class=\"icon-redo\"></span>\n                    </div>\n                </el-tooltip>\n                <el-tooltip class=\"item\" effect=\"dark\" content=\"获取JSON数据\" placement=\"top-start\">\n                    <div class=\"tool-item\" @click=\"handleGetData\">\n                        <span class=\"icon-json\"></span>\n                    </div>\n                </el-tooltip>\n                <el-tooltip class=\"item\" effect=\"dark\" content=\"网格\" placement=\"top-start\">\n                    <div class=\"tool-item\" @click=\"toggleGridLine = !toggleGridLine\">\n                        <span :class=\"toggleGridLineClass\"></span>\n                    </div>\n                </el-tooltip>\n            </div>\n            <!--zoom-->\n            <div class=\"flow-zoom\" :data-zoom=\"canvasDataRoom + '%'\">\n                <div class=\"zoom-btn\">\n                    <el-button size=\"mini\" :class=\"{'el-button--primary':canvasRoomMinusEnable}\" icon=\"el-icon-minus\"\n                               circle\n                               @click=\"handleMinusCanvas\"></el-button>\n                </div>\n                <div class=\"zoom-btn\">\n                    <el-button size=\"mini\" :class=\"{'el-button--primary':canvasRoomPlusEnable}\" icon=\"el-icon-plus\"\n                               circle\n                               @click=\"handlePlusCanvas\"></el-button>\n                </div>\n            </div>\n            <!--    canvas   -->\n            <div class=\"canvas-container\" :class=\"{'show-grid':toggleGridLine}\" :data-zoom=\"canvasDataRoom\">\n                <div id=\"campaignCanvas\" :style=\"canvasRoomScaleStyle\" ref=\"campaignCanvas\">\n                    <template v-for=\"(flowItem,index) in flowList\">\n                        <div class=\"node-content-wrap\"\n                             :key=\"flowItem.uuid\"\n                             @mousedown=\"handleFlowMoveDown\"\n                             @mouseup=\"(event)=>{handleChangeFlowPosition(flowItem,event)}\"\n                             :id=\"flowItem.uuid\"\n                             @click.stop=\"(event)=>{handleEditFlowItem(flowItem,event)}\"\n                             :style=\"{left:flowItem.left+'px',top:flowItem.top+'px'}\">\n                            <div class=\"node-content\">\n                                <draggable class=\"node-temp-small\" :ref=\"flowItem.uuid\"\n                                           :group=\"{name:'sortable', pull:false, put: true }\">\n                                </draggable>\n                                <template v-if=\"flowItem.groupType === flowTypeConstant.action\">\n                                    <div class=\"flow-item node\">\n                                        <div class=\"step-img\" :class=\"flowItem.className\"></div>\n                                        <div class=\"step-title\">{{flowItem.name}}</div>\n                                    </div>\n                                    <!--flow text-->\n                                    <div class=\"flow-text\">\n                                        <div class=\"text-line\">\n                                            <span>{{flowItem.formData && flowItem.formData.stepName}}</span>\n                                            <i class=\"el-icon-close flow-delete\"\n                                               @click.stop=\"handleDeleteFlowItem(flowItem)\"></i>\n                                        </div>\n                                    </div>\n                                    <!--    -->\n                                </template>\n                                <template v-else-if=\"flowItem.groupType === flowTypeConstant.condition\">\n                                    <div class=\"flow-item node-square\">\n                                        <div class=\"square\">\n                                            <div class=\"step-img\" :class=\"flowItem.className\"></div>\n                                        </div>\n                                    </div>\n                                    <div class=\"flow-text\">\n                                        <div class=\"text-line\">\n                                            <span>{{flowItem.formData && flowItem.formData.stepName}}</span>\n                                            <i class=\"el-icon-close flow-delete\"\n                                               @click.stop=\"handleDeleteFlowItem(flowItem)\"></i>\n                                        </div>\n                                        <div class=\"text-line1\">\n                                            <template v-if=\"flowItem.formData && flowItem.formData.ifNodeTitle\">\n                                                <span class=\"text-content\">{{flowItem.formData.ifNodeTitle}}</span>\n                                            </template>\n                                        </div>\n                                    </div>\n                                </template>\n                                <!-- flow -->\n                                <template v-else-if=\"flowItem.groupType === flowTypeConstant.flow\">\n                                    <div class=\"flow-item node node-circle\">\n                                        <div class=\"step-img\" :class=\"flowItem.className\"></div>\n                                    </div>\n                                    <div class=\"flow-text\">\n                                        <div class=\"text-line\">\n                                            <span>{{flowItem.formData && flowItem.formData.stepName}}</span>\n                                            <i class=\"el-icon-close flow-delete\"\n                                               v-if=\"flowItem.type !== flowItemTypeConstant.startNode\"\n                                               @click.stop=\"handleDeleteFlowItem(flowItem)\"></i>\n                                        </div>\n                                    </div>\n                                </template>\n                                <!--  temp node -->\n                                <template v-if=\"flowItem.groupType === flowTypeConstant.temp \">\n                                    <draggable class=\"flow-item node-temp node-temp-img\"\n                                               ref=\"tempNode\"\n                                               :id=\"flowItem.uuid\"\n                                               :group=\"{name:'sortable', pull:false, put: true }\">\n                                    </draggable>\n                                </template>\n                            </div>\n                        </div>\n                    </template>\n                </div>\n            </div>\n            <!-- sidebar-->\n            <div class=\"flow-editor-sidebar\">\n                <template v-for=\"(flowItem,index) in flowAllList\">\n                    <draggable class=\"items-box\"\n                               :key=\"index\"\n                               :list=\"flowItem.children\"\n                               :group=\"{name:'sortable', pull: 'clone', put: false }\"\n                               v-bind=\"dragConfig\"\n                               :move=\"handleFlowMoveItem\"\n                               @start=\"handleFlowMoveStart\"\n                               @end=\"handleFlowMoveEnd\"\n                               :sort=\"false\"\n                               :ref=\"flowItem.ref\">\n                        <template v-for=\"(item,index) in flowItem.children\">\n                            <template v-if=\"flowItem.type === flowTypeConstant.action\">\n                                <div class=\"node\" :key=\"index\" :title=\"item.name\" :data-id=\"item.id\"\n                                     :data-type=\"item.type\"\n                                     :data-group=\"item.groupType\"\n                                     v-if=\"!item.hidden\">\n                                    <div class=\"step-img\" :class=\"item.className\"></div>\n                                    <div class=\"step-title\">{{item.name}}</div>\n                                </div>\n                            </template>\n                            <template v-else-if=\"flowItem.type === flowTypeConstant.flow\">\n                                <div class=\"node node-circle\" :key=\"index\" :title=\"item.name\" :data-id=\"item.id\"\n                                     :data-type=\"item.type\"\n                                     :data-group=\"item.groupType\"\n                                     v-if=\"!item.hidden\">\n                                    <div class=\"step-img\" :class=\"item.className\"></div>\n                                </div>\n                            </template>\n                            <template v-else-if=\"flowItem.type === flowTypeConstant.condition\">\n                                <div class=\"node-square\" :key=\"index\" :title=\"item.name\" :data-id=\"item.id\"\n                                     :data-type=\"item.type\"\n                                     :data-group=\"item.groupType\"\n                                     v-if=\"!item.hidden\">\n                                    <div class=\"square\">\n                                        <div class=\"step-img\" :class=\"item.className\"></div>\n                                    </div>\n                                </div>\n                            </template>\n                        </template>\n                    </draggable>\n                </template>\n            </div>\n        </div>\n        <el-dialog\n                class=\"dialog-wrap\"\n                :visible.sync=\"dialogObj.visible\"\n                :show-close=false\n                width=\"500px\">\n            <template v-if=\"dialogObj.editType === flowItemTypeConstant.list\">\n                <list-form @handleCheck=\"handleSelectFlowItem\"></list-form>\n            </template>\n            <template v-else>\n                <div slot=\"title\" class=\"dialog-title\">\n                    <i class=\"el-icon-arrow-left\" v-if=\"dialogObj.editType !== flowItemTypeConstant.startNode\"\n                       @click=\"handleGoList\"></i>\n                    <span class=\"desc\">{{dialogObj.editType}}</span>\n                </div>\n                <div class=\"dialog-body\">\n                    <template v-if=\"dialogObj.editType\">\n                        <component v-bind:is=\"dialogFlowItemComponent\" ref=\"flowEditComponent\"\n                                   :editItem.sync=\"dialogObj.editForm\"></component>\n                    </template>\n                </div>\n            </template>\n            <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"handleCloseDialog\" size=\"mini\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleTempFlowFormData\" size=\"mini\"\n                   v-if=\"dialogObj.editType !== flowItemTypeConstant.list\">确 定</el-button>\n      </span>\n        </el-dialog>\n\n        <el-dialog\n                title=\"JSON数据\"\n                :visible.sync=\"dialogVisible\"\n                width=\"700px\">\n            <div class=\"pre-show\" ref=\"preShow\" v-if=\"dialogVisible\"></div>\n            <span slot=\"footer\" class=\"dialog-footer\">\n            <el-button type=\"primary\" @click=\"dialogVisible = false\">关 闭</el-button>\n          </span>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\n    import JSONFormatter from 'json-formatter-js';\n    import Draggable from './Draggable';\n    import {FLOW_ITEM_TYPE, FLOW_ALL_LIST, FLOW_LIST, FLOW_TYPE} from \"../constant\";\n    import {clone, uuid} from \"../utils\";\n    import {addClass, removeClass, getWidth} from '../utils/dom';\n    import ListForm from './listForm';\n    import StartNodeForm from './startNodeForm';\n    import NodeNodeForm from './nodeNodeForm';\n    import IfNodeForm from './ifNodeForm';\n    import ExpandNodeForm from './expandNodeForm'\n\n    import {jsPlumb} from 'jsplumb';\n    import _ from 'lodash';\n\n\n    const dragConfig = {\n        animation: 0,\n        group: \"description\",\n        disabled: false,\n        ghostClass: \"sortable-ghost\" // dragging class\n    };\n\n    const FLOW_STEP_LENGTH = 120;\n\n    const FLOW_LEFT_STEP_LENGTH = 80;\n\n    const FLOW_IF_OFFSET_LENGTH = 30;\n\n    const FLOW_START_STEP_TOP = 30;\n\n\n    export default {\n        name: \"Workflow\",\n        jsPlumb: null,\n        data() {\n            return {\n                flowTypeConstant: FLOW_TYPE,\n                flowItemTypeConstant: FLOW_ITEM_TYPE,\n                flowAllList: FLOW_ALL_LIST,\n                jsPlumbInit: false,\n\n                dialogObj: {\n                    visible: false,\n                    editType: undefined,\n                    flowUUid: undefined,\n                    editForm: undefined,\n                    isBetween: false,\n                    flowPreUuid: undefined,\n                    flowNextUuid: undefined\n                },\n\n                dialogVisible: false,\n                // flowStart\n                flowList: [],\n                dragConfig: dragConfig,\n                movingFlowItem: undefined, // moving\n                movedFlowItem: undefined, //  moved\n                canvasDataRoom: 100,\n                toggleGridLine: true\n            }\n        },\n        components: {\n            Draggable,\n            ListForm,\n            StartNodeForm,\n            NodeNodeForm,\n            IfNodeForm,\n            ExpandNodeForm\n        },\n        mounted() {\n            this.$options.jsPlumb = jsPlumb.getInstance();\n            this.initJsPlumb();\n            this.initFlow();\n        },\n        computed: {\n            dialogFlowItemComponent() {\n                return this.dialogObj.editType + 'Form';\n            },\n            canvasRoomMinusEnable() {\n                return this.canvasDataRoom > 50;\n            },\n            canvasRoomPlusEnable() {\n                return this.canvasDataRoom < 100;\n            },\n            canvasRoomScaleStyle() {\n                return {\n                    transform: 'scale(' + this.canvasDataRoom / 100 + ')'\n                };\n            },\n            toggleGridLineClass() {\n                return this.toggleGridLine ? 'icon-wangge-open' : 'icon-wangge-close';\n            }\n        },\n        methods: {\n            // init flow\n            // create startFlow and tempFlow\n            initFlow() {\n                let startFlowUuid = this.createFlowItem(FLOW_ITEM_TYPE.startNode);\n                this.addTempFlowItem(startFlowUuid);\n            },\n\n            updateFlow(editItem) {\n                let positions = JSON.parse(editItem.positions);\n                let steps = editItem.steps;\n                let flowList = [];\n\n                steps.forEach((step) => {\n                    let flowItem = this.getFlowItemById(step.elementId);\n\n                    if (!flowItem) {\n                        return;\n                    }\n                    flowItem.next = [];\n                    flowItem.prev = [];\n                    flowItem.uuid = step.stepId;\n\n                    let position = positions[step.stepId];\n\n                    if (position) {\n                        flowItem.left = position.left;\n                        flowItem.top = position.top;\n                    }\n\n                    if (step.nextStep) {\n                        flowItem.next = [step.nextStep];\n                    } else if (step.nextSteps) {\n                        flowItem.next = step.nextSteps.map((nextStep) => {\n                            return nextStep.nextStep;\n                        });\n                    }\n\n                    if (flowItem.type !== FLOW_ITEM_TYPE.endNode) {\n                        //\n                        if (this.isIfFlowItem(flowItem.type)) {\n                            let formData = clone(step.nextSteps[0]);\n                            formData.stepName = step.stepName;\n                            flowItem.formData = this.getFlowItemFormData(formData);\n                            // else\n                            if (formData.isDefault) {\n                                flowItem.nextElseId = formData.nextStep;\n                                flowItem.nextIfId = step.nextSteps[1].nextStep;\n                            } else {\n                                flowItem.nextIfId = formData.nextStep;\n                                flowItem.nextElseId = step.nextSteps[1].nextStep;\n                            }\n                            if (step.stepJson) {\n                                let stepOtherObj = JSON.parse(step.stepJson);\n                                flowItem.formData.ifNodeTitle = stepOtherObj.ifNodeTitle;\n                            }\n                        } else if (this.isExpandFlowItem(flowItem.type)) {\n                            let ruleGroupList = step.nextSteps;\n                            let formData = {};\n                            formData.stepName = step.stepName;\n                            formData.ruleGroupList = ruleGroupList;\n                            flowItem.formData = formData;\n                        } else {\n                            flowItem.formData = this.getFlowItemFormData(step);\n                        }\n                    }\n\n                    flowList.push(flowItem);\n                });\n\n                // update\n                flowList.forEach((item) => {\n                    if (item.next.length > 0) {\n                        item.next.forEach((id) => {\n                            let nextItem = _.find(flowList, (tempItem) => {\n                                return tempItem.uuid === id;\n                            });\n\n                            if (nextItem) {\n                                if (nextItem.prev.indexOf(item.uuid) === -1) {\n                                    nextItem.prev.push(item.uuid);\n                                }\n                            }\n                        });\n                    }\n                });\n                this.flowList = flowList;\n\n                this.$nextTick(() => {\n                    //\n                    flowList.forEach((item) => {\n                        this.$options.jsPlumb.draggable(item.uuid, {});\n                    });\n\n                    this.$nextTick(() => {\n                        flowList.forEach((item) => {\n                            item.next.forEach((id, index) => {\n                                this.addFlowItemConnect(item.uuid, id);\n                                //\n                                if (this.isIfFlowItem(item.type)) {\n                                    let nextFlowItem = this.getFlow(id);\n                                    let isIf = item.nextIfId === nextFlowItem.uuid;\n                                    this.createFlowItemLabel(item.uuid, id, isIf ? '是' : '否');\n                                } else if (this.isExpandFlowItem(item.type)) {\n                                    let name = this.getExpandFlowItemName(item, id);\n                                    this.createFlowItemLabel(item.uuid, id, name);\n                                }\n                            });\n                        });\n                    });\n                });\n            },\n\n            // init js plumb\n            initJsPlumb() {\n                this.$options.jsPlumb.ready(() => {\n                    this.jsPlumbInit = true;\n                    this.$options.jsPlumb.importDefaults({\n                        ConnectionsDetachable: false,\n                        LogEnabled: true\n                    });\n                });\n            },\n\n            //\n            createFlowConnectionLabel(sourceList, target) {\n\n                if (!Array.isArray(sourceList)) {\n                    sourceList = [sourceList];\n                }\n\n                sourceList.forEach((source) => {\n                    //\n                    let lines = this.$options.jsPlumb.getConnections({\n                        source: source,\n                        target: target\n                    });\n                    //\n                    lines.forEach((line) => {\n                        line.getOverlay('nodeTempSmall').setVisible(true);\n                        line.bind('click', this.handleFlowLabelClick);\n                    });\n                });\n            },\n\n            createFlowItemLabel(source, target, label) {\n                this.$nextTick(() => {\n                    let lines = this.$options.jsPlumb.getConnections({\n                        source: source,\n                        target: target\n                    });\n                    if (lines.length > 0) {\n                        lines[0].getOverlay(\"flowItemDesc\").setLabel(`<span class=\"node-item-title\" title=\"${label}\">${label}</span>`);\n                    }\n                });\n            },\n\n            removeFlowConnection(source, target) {\n                //\n                let lines = this.$options.jsPlumb.getConnections({\n                    source: source,\n                    target: target\n                });\n\n                lines.forEach((line) => {\n                    this.$options.jsPlumb.deleteConnection(line);\n                });\n            },\n\n            //\n            handleFlowLabelClick(label) {\n                let component = label.component;\n                if (component) {\n                    let sourceId = component.sourceId;\n                    let targetId = component.targetId;\n                    this.showDialog({\n                        isBetween: true,\n                        flowPreUuid: sourceId,\n                        flowNextUuid: targetId\n                    });\n                }\n            },\n\n            handleEditFlowItem(flowItem, event) {\n                let target = event.currentTarget;\n\n\n                if (target.dataset.isClick === 'true') {\n                    this.showDialog({\n                        flowItemType: flowItem.type,\n                        flowUuid: flowItem.uuid,\n                        flowFormData: flowItem.formData\n                    });\n                }\n            },\n            //\n            draggableFlowConnect(source, target, isNow) {\n                let that = this;\n\n                function doDraw() {\n                    if (that.jsPlumbInit) {\n                        that.$options.jsPlumb.connect({\n                            source: source,\n                            target: target,\n                            endpoint: 'Dot',\n                            // 连接线的样式\n                            connectorStyle: {strokeStyle: \"#ccc\", joinStyle: \"round\", outlineColor: \"#ccc\"}, // 链接 style\n                            // 连接线配置，起点可用\n                            connector: [\"Flowchart\", {\n                                stub: [10, 20],\n                                gap: 1,\n                                cornerRadius: 2,\n                                alwaysRespectStubs: true\n                            }], //  链接\n                            //\n                            endpointStyle: {fill: 'transparent', outlineStroke: 'transparent', outlineWidth: 2},\n                            // 线的样式\n                            paintStyle: {stroke: 'lightgray', strokeWidth: 2},\n                            // 锚点的位置\n                            anchor: ['BottomCenter', 'TopCenter'],\n                            // 遮罩层-设置箭头\n                            overlays: [\n                                ['PlainArrow', {width: 10, length: 10, location: 1}],\n                                ['Custom', {\n                                    location: .5,\n                                    id: 'nodeTempSmall',\n                                    create: function () {\n                                        let $el = that.$refs[target][0].$el;\n                                        $el.dataset.target = target;\n                                        $el.dataset.source = source;\n                                        return $el;\n                                    },\n                                    visible: false\n                                }],\n                                ['Label', {location: 1, id: \"flowItemDesc\", cssClass: \"node-item-label\", visible: true}] //\n                            ]\n                        });\n                    }\n                }\n\n                if (isNow) {\n                    doDraw();\n                } else {\n                    this.$nextTick(() => {\n                        doDraw();\n                    });\n                }\n\n            },\n\n            getFlowItemInitLeft() {\n                const $campaignCanvas = this.$refs.campaignCanvas;\n                let width = getWidth($campaignCanvas);\n                let result = 500;\n                if (width) {\n                    result = width / 2;\n                }\n                return result;\n            },\n\n            //\n            createFlowItem(type, prev, options) {\n                options = options || {};\n                let _uuid = uuid();\n                let flowItem = this.getFlowItemByType(type);\n                let lastItemList = [];\n                if (flowItem) {\n                    //\n                    flowItem.prev = [];\n                    flowItem.next = [];\n                    flowItem.formData = {};\n                    flowItem.left = this.getFlowItemInitLeft();\n                    flowItem.top = FLOW_START_STEP_TOP;\n                    flowItem.uuid = _uuid;\n                    //\n                    if (prev) {\n\n                        if (!Array.isArray(prev)) {\n                            prev = [prev];\n                        }\n                        flowItem.prev = prev;\n\n                        //\n                        prev.forEach((p) => {\n                            // update prev flow item  next list\n                            let lastItem = _.find(this.flowList, (item) => {\n                                return item.uuid === p;\n                            });\n\n                            if (lastItem) {\n                                lastItemList.push(lastItem);\n                                if (lastItem.next.indexOf(_uuid) === -1) {\n                                    lastItem.next.push(_uuid);\n                                }\n                            }\n                        });\n\n                    }\n                    //\n                    if (lastItemList.length > 0) {\n                        if (lastItemList.length === 1) {\n                            let prevItem = lastItemList[0];\n\n                            if (options.offsetLeft) {\n                                flowItem.left = prevItem.left + options.offsetLeft;\n                            } else if (options.left) {\n                                flowItem.left = options.left;\n                            } else {\n                                flowItem.left = prevItem.left;\n                            }\n                            flowItem.top = prevItem.top + FLOW_STEP_LENGTH;\n                        } else {\n                            //\n                        }\n                    }\n\n                    this.flowList.push(flowItem);\n\n                    // support drag\n                    this.$nextTick(() => {\n                        this.$options.jsPlumb.draggable(_uuid, {});\n                    });\n                }\n                return flowItem ? _uuid : null;\n            },\n            //\n            updateFlowItem(type, preId) {\n                // old\n                let tempFlowItem = this.getFlow(preId);\n                // new\n                let newFlowItem = this.getFlowItemByType(type);\n\n                for (let key in newFlowItem) {\n                    tempFlowItem[key] = newFlowItem[key];\n                }\n\n\n                return tempFlowItem;\n            },\n\n            // delete flow item\n            deleteFlowItem(flowItem) {\n                //\n                if (this.isOnePreOneNext(flowItem) || this.isEndFlowItem(flowItem)) {\n                    //\n                    let index = this.getFlowIndex(flowItem.uuid);\n                    this.handleDeleteOnePrevOneNextFlowItem(flowItem, index);\n                } else if (this.isHasMoreNextFlowItem(flowItem)) {\n                    //  delete ifElse or expand\n                    this.deleteNextFlowItem(flowItem.uuid);\n                    const preFlowItem = this.getFlow(flowItem.prev[0]);\n                    // delete ifElse\n                    if (this.isIfFlowItem(preFlowItem.type)) {\n                        this.addIfOneTempFlowItem(preFlowItem.uuid, preFlowItem.nextIfId === flowItem.uuid)\n                    }\n                    // delete expand\n                    else if (this.isExpandFlowItem(preFlowItem.type)) {\n                        //\n                        // this.addTempFlowItem(flowItem.prev[0]);\n                        const expandFlowItem = this.getExpandFlowItem(preFlowItem, flowItem.uuid);\n                        this.addExpandOneTempFlowItem(preFlowItem, flowItem.left, expandFlowItem.name);\n                    }\n                    this.addTempFlowItem(flowItem.prev[0]);\n                }\n            },\n\n            // only has one prev one next flow item\n            handleDeleteOnePrevOneNextFlowItem(flowItem, idx) {\n                let prevFlowList = [];\n                let nextFlowList = [];\n                let deleteFlowItem = this.flowList[idx];\n                // prev flow list\n                // next flow list\n                this.flowList.forEach((item) => {\n                    if (item.prev.length > 0 && item.prev.indexOf(flowItem.uuid) !== -1) {\n                        nextFlowList.push(item);\n                    } else if (item.next.length > 0 && item.next.indexOf(flowItem.uuid) !== -1) {\n                        prevFlowList.push(item);\n                    }\n                });\n\n                //\n                let expandFlowItem = {};\n                if (flowItem.type === FLOW_ITEM_TYPE.endNode && prevFlowList[0].type === FLOW_ITEM_TYPE.expandNode) {\n                    expandFlowItem = this.getExpandFlowItem(prevFlowList[0], flowItem.uuid);\n                }\n\n                // next flow item delete perv id\n                nextFlowList.forEach((item) => {\n                    let index = item.prev.indexOf(flowItem.uuid);\n                    item.prev.splice(index, 1);\n                });\n\n                // prev flow item delete next id\n                prevFlowList.forEach((item) => {\n                    let index = item.next.indexOf(flowItem.uuid);\n                    item.next.splice(index, 1);\n                });\n                // todo\n                // delete end points\n                this.$options.jsPlumb.removeAllEndpoints(flowItem.uuid, true);\n                this.flowList.splice(idx, 1);\n\n                this.$nextTick(function () {\n                    let preFlowItem = prevFlowList[0];\n                    let nextFlowItem = nextFlowList[0];\n\n                    if (preFlowItem && nextFlowItem) {\n                        // add new id\n                        preFlowItem.next.push(nextFlowItem.uuid);\n                        nextFlowItem.prev.push(preFlowItem.uuid);\n                        // drag connection\n                        this.draggableFlowConnect(preFlowItem.uuid, nextFlowItem.uuid, true);\n                        // connection label\n                        if (nextFlowItem.type !== FLOW_ITEM_TYPE.tempNode) {\n                            this.createFlowConnectionLabel(preFlowItem.uuid, nextFlowItem.uuid);\n                        }\n                        // if prev is ifNode or expandNode need add flow label\n                        if (this.isIfFlowItem(preFlowItem.type)) {\n                            let isIf = preFlowItem.nextIfId === flowItem.uuid;\n                            if (isIf) {\n                                preFlowItem.nextIfId = nextFlowItem.uuid;\n                            } else {\n                                preFlowItem.nextElseId = nextFlowItem.uuid;\n                            }\n                            this.createFlowItemLabel(preFlowItem.uuid, nextFlowItem.uuid, isIf ? '是' : '否');\n                        } else if (this.isExpandFlowItem(preFlowItem.type)) {\n                            // need update rule group list;\n                            let ruleGroupItem = this.getExpandFlowItem(preFlowItem, deleteFlowItem.uuid);\n                            if (ruleGroupItem) {\n                                ruleGroupItem.nextStep = nextFlowItem.uuid;\n                            }\n                            this.createFlowItemLabel(preFlowItem.uuid, nextFlowItem.uuid, ruleGroupItem.name);\n                        }\n                    }\n                    // if delete end node\n                    if ((flowItem.type === FLOW_ITEM_TYPE.endNode)) {\n                        if (preFlowItem) {\n                            // if prev is ifNode or expandNode need add flow label\n                            if (this.isIfFlowItem(preFlowItem.type)) {\n                                let isIf = preFlowItem.nextIfId === flowItem.uuid;\n                                //  create one flow item\n                                this.addIfOneTempFlowItem(preFlowItem.uuid, isIf);\n                            } else if (this.isExpandFlowItem(preFlowItem.type)) {\n                                // create one flow item\n                                let tempFlowUuid = this.addExpandOneTempFlowItem(preFlowItem, flowItem.left, expandFlowItem.name);\n                                expandFlowItem.nextStep = tempFlowUuid;\n                            } else {\n                                // add temp flow item\n                                this.addTempFlowItem(preFlowItem.uuid);\n                            }\n                        }\n                    }\n\n                    this.$nextTick(() => {\n                        if (nextFlowItem) {\n                            this.moveFlowItem(nextFlowItem.uuid);\n                            this.$_plumbRepaintEverything();\n                        }\n                    });\n                });\n            },\n\n            //\n            $_plumbRepaintEverything() {\n                this.$nextTick(() => {\n                    this.$options.jsPlumb.repaintEverything(true);\n                });\n            },\n\n\n            getFlowItemById(id) {\n                let result = null;\n\n                Object.keys(FLOW_LIST).forEach((group) => {\n                    let groupList = FLOW_LIST[group];\n                    if (groupList && groupList.length > 0) {\n                        //\n                        let item = _.find(groupList, (item) => {\n                            return item.id === id;\n                        });\n\n                        if (item) {\n                            result = clone(item);\n                        }\n                    }\n                });\n                return result;\n            },\n\n            getFlowItemByType(type) {\n                let result = null;\n\n                Object.keys(FLOW_LIST).forEach((group) => {\n                    let groupList = FLOW_LIST[group];\n                    if (groupList && groupList.length > 0) {\n\n                        let item = _.find(groupList, (item) => {\n                            return item.type === type;\n                        });\n\n                        if (item) {\n                            result = clone(item);\n                        }\n                    }\n                });\n                return result;\n            },\n\n\n            //\n            handleFlowMoveItem(evt) {\n                let $to = evt.to;\n                let $dragged = evt.dragged;\n                if ($dragged.dataset.id === FLOW_ITEM_TYPE.startNode) {\n                    return false;\n                }\n\n                if (!this.movedFlowItem) {\n                    this.movedFlowItem = $to;\n                    addClass($to, 'is-active');\n                }\n                // change target item\n                else if (this.movedFlowItem && this.movedFlowItem !== $to) {\n                    removeClass(this.movedFlowItem, 'is-active');\n                    this.movedFlowItem = $to;\n                    addClass($to, 'is-active');\n                }\n            },\n\n            //\n            handleDeleteFlowItem(flowItem) {\n                this.$confirm('确定要删除吗？', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    this.deleteFlowItem(flowItem);\n                }).catch(() => {\n\n                });\n            },\n\n            //\n            handleFlowMoveStart(evt) {\n                let item = evt.item;\n                let dataset = item.dataset;\n                this.movingFlowItem = {\n                    group: dataset.group,\n                    type: dataset.type\n                };\n            },\n\n            handleFlowMoveEnd(evt) {\n                const originalEvent = evt.originalEvent;\n                if (this.movedFlowItem) {\n                    removeClass(this.movedFlowItem, 'is-active');\n                    if (originalEvent.toElement !== this.movedFlowItem) {\n                        this.movedFlowItem = undefined;\n                        this.movingFlowItem = undefined;\n                        return;\n                    }\n                    let obj = {\n                        flowItemType: this.movingFlowItem.type,\n                        flowUuid: this.movedFlowItem.id,\n                    };\n\n                    if (this.movedFlowItem.dataset.source && this.movedFlowItem.dataset.target) {\n                        obj.isBetween = true;\n                        obj.flowPreUuid = this.movedFlowItem.dataset.source;\n                        obj.flowNextUuid = this.movedFlowItem.dataset.target;\n                        delete obj.flowUuid;\n                    }\n\n                    this.showDialog(obj);\n                }\n\n                this.movedFlowItem = undefined;\n                this.movingFlowItem = undefined;\n            },\n\n            //\n            handleSelectFlowItem(flowItem) {\n                //\n                if (flowItem.type === FLOW_ITEM_TYPE.endNode) {\n                    if (this.dialogObj.isBetween) {\n                        // add end flow item and remove next all\n                        let prevFlowId = this.dialogObj.flowPreUuid;\n                        let nextFlowId = this.dialogObj.flowNextUuid;\n                        this.deleteNextFlowItem(nextFlowId);\n\n                        this.$nextTick(() => {\n                            // temp\n                            let tempFlowUuid = this.addTempFlowItem(prevFlowId);\n                            this.$nextTick(() => {\n                                this.handleAddFlowItem(flowItem.type, tempFlowUuid);\n                            });\n                        });\n                    } else {\n                        this.handleAddFlowItem(flowItem.type, this.dialogObj.flowUUid);\n                    }\n                    this.initDialog();\n                    return;\n                }\n\n                //\n                this.showDialog({\n                    flowItemType: flowItem.type,\n                    flowUuid: this.dialogObj.flowUUid\n                });\n            },\n\n\n            // add flow item\n            handleAddFlowItem(flowItemType, tempFlowId) {\n                // update flow item\n                let newFlowItem = this.updateFlowItem(flowItemType, tempFlowId);\n                // connection label\n                this.createFlowConnectionLabel(newFlowItem.prev, newFlowItem.uuid);\n                // action or wait node\n                if (this.isOnePreOneNext(newFlowItem)) {\n                    this.addTempFlowItem(tempFlowId);\n                } else if (newFlowItem.groupType === FLOW_TYPE.condition) {\n                    const preFlowItem = this.getFlow(newFlowItem.prev[0]);\n                    if (this.isIfFlowItem(flowItemType)) {\n                        // if pre node is ifElse\n                        if (this.isIfFlowItem(preFlowItem.type)) {\n                            if (preFlowItem.nextIfId === newFlowItem.uuid) {\n                                newFlowItem.left -= FLOW_IF_OFFSET_LENGTH;\n                            } else if (preFlowItem.nextElseId === newFlowItem.uuid) {\n                                newFlowItem.left += FLOW_IF_OFFSET_LENGTH;\n                            }\n                        }\n                        // add if temp flow item and else temp flow item\n                        this.addIfTempFlowItem(tempFlowId);\n                    }\n                    //\n                    else if (this.isExpandFlowItem(flowItemType)) {\n                        // if pre node is ifElse\n                        if (this.isIfFlowItem(preFlowItem.type)) {\n                            const nextLength = newFlowItem.formData.ruleGroupList.length;\n                            let isEven = nextLength % 2 === 0;\n                            let centerIndex = parseInt(nextLength / 2, 10);\n                            const offset = (isEven ? centerIndex : centerIndex + 1) * FLOW_LEFT_STEP_LENGTH + FLOW_IF_OFFSET_LENGTH;\n                            if (preFlowItem.nextIfId === newFlowItem.uuid) {\n                                newFlowItem.left -= offset;\n                            } else if (preFlowItem.nextElseId === newFlowItem.uuid) {\n                                newFlowItem.left += offset;\n                            }\n                        }\n                        this.addExpandTempFlowItem(tempFlowId, newFlowItem.formData.ruleGroupList);\n                    }\n                    this.$_plumbRepaintEverything();\n                }\n\n                return newFlowItem;\n            },\n\n            // update flow item\n            handleUpdateFlowItem(options) {\n                let {flowItemType, tempFlowId} = options;\n\n                let preFlowItem = this.getFlow(tempFlowId);\n                let isPrevHasMoreNext = false;\n                // update new flow item\n                let newFlowItem = this.updateFlowItem(flowItemType, tempFlowId);\n                // if update new flow type\n                if (flowItemType !== preFlowItem.type) {\n                    // update old flow item\n                    if (this.isHasMoreNextFlowItem(preFlowItem)) {\n                        isPrevHasMoreNext = true;\n                        preFlowItem.next.forEach((id) => {\n                            this.deleteNextFlowItem(id);\n                        });\n                    }\n                    if (this.isIfFlowItem(flowItemType)) {\n                        this.handleUpdateIfFlowItem(newFlowItem);\n                    } else if (this.isExpandFlowItem(flowItemType)) {\n                        this.handleUpdateExpandFlowItem(newFlowItem);\n                    } else {\n                        if (isPrevHasMoreNext) {\n                            this.addTempFlowItem(newFlowItem.uuid);\n                        }\n                    }\n                } else {\n                    // update self item\n                    // compare groupList and next\n                    // todo: 待完成\n                    if (this.isExpandFlowItem(flowItemType)) {\n                        const ruleGroupList = newFlowItem.formData.ruleGroupList;\n                        const nextList = newFlowItem.next;\n                        const newNextList = [];\n\n                        const addRuleGroupList = [];\n                        let deleteUUidList = [];\n                        //\n                        ruleGroupList.forEach((ruleGroupItem) => {\n                            const nextStep = ruleGroupItem.nextStep;\n                            if (nextStep) {\n                                newNextList.push(nextStep);\n                                //  update group item label name;\n                                this.createFlowItemLabel(newFlowItem.uuid, nextStep, ruleGroupItem.name);\n                            } else {\n                                addRuleGroupList.push(ruleGroupItem);\n                            }\n                        });\n                        // delete item\n                        deleteUUidList = _.difference(nextList, newNextList);\n\n                        if (deleteUUidList.length > 0) {\n                            // update next\n                            newFlowItem.next = newNextList;\n                            deleteUUidList.forEach((uuid) => {\n                                this.deleteNextFlowItem(uuid);\n                            });\n                        }\n\n                        if (addRuleGroupList.length > 0) {\n                            let leftPosition = 0;\n                            newFlowItem.next.forEach((uuid) => {\n                                let flowItem = this.getFlow(uuid);\n                                if (leftPosition < flowItem.left) {\n                                    leftPosition = flowItem.left;\n                                }\n                            });\n                            // need last left\n                            addRuleGroupList.forEach((ruleGroupItem, index) => {\n                                let left = leftPosition + (index + 1) * (FLOW_LEFT_STEP_LENGTH * 2);\n                                let tempFlowUuid = this.createFlowItem(FLOW_ITEM_TYPE.tempNode, newFlowItem.uuid, {left});\n                                this.draggableFlowConnect(newFlowItem.uuid, tempFlowUuid);\n                                this.createFlowItemLabel(newFlowItem.uuid, tempFlowUuid, ruleGroupItem.name);\n                                ruleGroupItem.nextStep = tempFlowUuid;\n                            })\n                        }\n                    }\n                }\n            },\n\n            // update if flow item\n            // delete next nodes\n            handleUpdateIfFlowItem(flowItem) {\n                flowItem.next.forEach((id) => {\n                    this.deleteNextFlowItem(id);\n                });\n                this.$nextTick(() => {\n                    this.addIfTempFlowItem(flowItem.uuid);\n                });\n            },\n\n            // update expand flow item\n            // delete next nodes\n            handleUpdateExpandFlowItem(flowItem) {\n                flowItem.next.forEach((id) => {\n                    this.deleteNextFlowItem(id);\n                });\n                this.$nextTick(() => {\n                    this.addExpandTempFlowItem(flowItem.uuid, flowItem.formData.ruleGroupList);\n                });\n            },\n\n            //\n            handleAddBetweenFlowItem(options) {\n                let {flowItemType, preFlowId, nextFlowId, formData} = options;\n                // if step is ifElse of Expand\n                // need delete next all flow\n                if (this.isHasMoreNextFlowItemByType(flowItemType)) {\n                    this.deleteNextFlowItem(nextFlowId);\n                    this.$nextTick(() => {\n                        let tempFlowUuid = this.addTempFlowItem(preFlowId);\n                        let tempFlowItem = this.getFlow(tempFlowUuid);\n                        tempFlowItem.formData = formData;\n                        this.$nextTick(() => {\n                            this.handleAddFlowItem(flowItemType, tempFlowUuid);\n                        });\n                    });\n                } else {\n                    this.handleAddBetweenCommonFlowItem(options);\n                }\n            },\n\n            // add between flow item\n            handleAddBetweenCommonFlowItem(opts) {\n                let {flowItemType, preFlowId, nextFlowId, formData} = opts;\n                // update flow position\n                let prevFlowItem = this.getFlow(preFlowId);\n                let options = {};\n                //\n                let flowItemUuid = null;\n                // prev flow item is if flow item\n                if (this.isIfFlowItem(prevFlowItem.type)) {\n                    let nextFlowItem = this.getFlow(nextFlowId);\n                    let isIf = prevFlowItem.nextIfId === nextFlowItem.uuid;\n                    options.offsetLeft = isIf ? -FLOW_LEFT_STEP_LENGTH : FLOW_LEFT_STEP_LENGTH;\n                    flowItemUuid = this.createFlowItem(flowItemType, preFlowId, options);\n                    if (isIf) {\n                        prevFlowItem.nextIfId = flowItemUuid;\n                    } else {\n                        prevFlowItem.nextElseId = flowItemUuid;\n                    }\n\n                } else if (this.isExpandFlowItem(prevFlowItem.type)) {\n                    let nextFlowItem = this.getFlow(nextFlowId);\n                    options.offsetLeft = nextFlowItem.left - prevFlowItem.left;\n                    flowItemUuid = this.createFlowItem(flowItemType, preFlowId, options);\n                }\n\n                if (!flowItemUuid) {\n                    flowItemUuid = this.createFlowItem(flowItemType, preFlowId);\n                }\n\n                let flowItem = this.getFlow(flowItemUuid);\n                flowItem.formData = formData;\n                flowItem.next.push(nextFlowId);\n                //\n                this.$nextTick(() => {\n                    this.updateBetweenFlowItem(flowItemUuid, nextFlowId, preFlowId);\n\n                    if (this.isIfFlowItem(prevFlowItem.type)) {\n                        this.createFlowItemLabel(preFlowId, flowItemUuid, options.offsetLeft > 0 ? '是' : '否`');\n                    }\n                    // expand\n                    else if (this.isExpandFlowItem(prevFlowItem.type)) {\n                        let name = this.getExpandFlowItemName(prevFlowItem, flowItemUuid);\n                        this.createFlowItemLabel(preFlowId, flowItemUuid, name);\n                    }\n                });\n            },\n\n            //\n            getExpandFlowItemName(expandFlowItem, tempFlowUuid) {\n                let ruleGroupItem = this.getExpandFlowItem(expandFlowItem, tempFlowUuid);\n                let name = '';\n                if (ruleGroupItem) {\n                    name = ruleGroupItem.name;\n                }\n                return name;\n            },\n\n            getExpandFlowItem(expandFlowItem, tempFlowUuid) {\n                let ruleGroupList = expandFlowItem.formData.ruleGroupList;\n\n                let ruleGroupItem = _.find(ruleGroupList, (groupItem) => {\n                    return groupItem.nextStep === tempFlowUuid;\n                });\n\n                return ruleGroupItem;\n            },\n\n            //\n            updateBetweenFlowItem(flowItemUuid, nextFlowId, preFlowId) {\n\n                // prev flow item\n                let preFlowItem = this.getFlow(preFlowId);\n\n                // pre flow item remove next next flow\n                let preNextIndex = preFlowItem.next.indexOf(nextFlowId);\n                if (preNextIndex !== -1) {\n                    preFlowItem.next.splice(nextFlowId, 1);\n                }\n\n                // prev flow item add current flow\n                let flowItemIndex = preFlowItem.next.indexOf(flowItemUuid);\n                if (flowItemIndex === -1) {\n                    preFlowItem.next.push(flowItemUuid);\n                }\n\n                // has one prev\n                let nextFlowItem = this.getFlow(nextFlowId);\n                nextFlowItem.prev = [flowItemUuid];\n\n                // remove flow connection\n                this.removeFlowConnection(preFlowId, nextFlowId);\n                //\n                this.addFlowItemConnect(preFlowId, flowItemUuid);\n                this.addFlowItemConnect(flowItemUuid, nextFlowId);\n\n                // move flow\n                this.moveFlowItem(nextFlowId);\n                //\n                this.$_plumbRepaintEverything();\n            },\n\n\n            moveFlowItem(flowUuid) {\n                let flowItem = this.getFlow(flowUuid);\n\n                if (flowItem.prev.length > 0) {\n                    let prevItem = this.getFlow(flowItem.prev[0]);\n                    flowItem.top = prevItem.top + FLOW_STEP_LENGTH;\n                }\n                // update next\n                flowItem.next.forEach((id) => {\n                    this.moveFlowItem(id);\n                });\n            },\n\n            deleteNextFlowItem(flowUuid) {\n                let flowItem = this.getFlow(flowUuid);\n                let index = this.getFlowIndex(flowUuid);\n\n                if (!flowItem) {\n                    return;\n                }\n\n                this.flowList.splice(index, 1);\n\n                this.$nextTick(() => {\n                    // delete self\n                    this.$options.jsPlumb.removeAllEndpoints(flowItem.uuid);\n                });\n\n                flowItem.next.forEach((id) => {\n                    this.deleteNextFlowItem(id);\n                });\n            },\n\n            getFlow(flowUuid) {\n                let flowItem = _.find(this.flowList, (item) => {\n                    return item.uuid === flowUuid;\n                });\n\n                return flowItem;\n            },\n\n            getFlowIndex(flowUuid) {\n                let index = _.findIndex(this.flowList, (item) => {\n                    return item.uuid === flowUuid;\n                });\n\n                return index;\n            },\n\n\n            // temp flow\n            addTempFlowItem(preUuid) {\n                let tempFlowUuid = this.createFlowItem(FLOW_ITEM_TYPE.tempNode, preUuid);\n                this.draggableFlowConnect(preUuid, tempFlowUuid);\n                return tempFlowUuid;\n            },\n\n            //\n            addIfTempFlowItem(preUuid) {\n                this.addIfOneTempFlowItem(preUuid, true);\n                this.addIfOneTempFlowItem(preUuid, false);\n            },\n\n            addIfOneTempFlowItem(preUuid, isIf) {\n                let preTempItem = this.getFlow(preUuid);\n                let leftPosition = isIf ? -FLOW_LEFT_STEP_LENGTH : FLOW_LEFT_STEP_LENGTH;\n                let tempFlowUuid = this.createFlowItem(FLOW_ITEM_TYPE.tempNode, preUuid, {offsetLeft: leftPosition});\n                this.draggableFlowConnect(preUuid, tempFlowUuid);\n                this.createFlowItemLabel(preUuid, tempFlowUuid, isIf ? '是' : '否');\n                if (isIf) {\n                    preTempItem.nextIfId = tempFlowUuid;\n                } else {\n                    preTempItem.nextElseId = tempFlowUuid;\n                }\n                return tempFlowUuid;\n            },\n\n            // add expand temp flow items\n            addExpandTempFlowItem(preUuid, ruleGroups) {\n                let length = ruleGroups.length;\n                // is even\n                let isEven = length % 2 === 0;\n                let centerIndex = parseInt(length / 2, 10);\n                centerIndex = isEven ? centerIndex - 1 : centerIndex;\n                let tempItem;\n                let options = {};\n                // left\n                for (let i = 0; i <= centerIndex; i++) {\n                    tempItem = ruleGroups[i];\n                    let tempLength = isEven ? (centerIndex - i) : (centerIndex - i);\n                    let leftLength = tempLength * (FLOW_LEFT_STEP_LENGTH * 2);\n                    if (isEven) {\n                        leftLength = leftLength + FLOW_LEFT_STEP_LENGTH;\n                    }\n                    options.offsetLeft = -leftLength;\n                    let tempFlowUuid = this.createFlowItem(FLOW_ITEM_TYPE.tempNode, preUuid, options);\n                    this.draggableFlowConnect(preUuid, tempFlowUuid);\n                    this.createFlowItemLabel(preUuid, tempFlowUuid, tempItem.name);\n                    tempItem.nextStep = tempFlowUuid;\n                }\n                // right\n                for (let i = centerIndex + 1; i < length; i++) {\n                    tempItem = ruleGroups[i];\n                    let tempLength = isEven ? (i - (centerIndex + 1)) : (i - centerIndex);\n                    let leftLength = tempLength * (FLOW_LEFT_STEP_LENGTH * 2);\n                    if (isEven) {\n                        leftLength = leftLength + FLOW_LEFT_STEP_LENGTH;\n                    }\n                    options.offsetLeft = leftLength;\n                    let tempFlowUuid = this.createFlowItem(FLOW_ITEM_TYPE.tempNode, preUuid, options);\n                    this.draggableFlowConnect(preUuid, tempFlowUuid);\n                    this.createFlowItemLabel(preUuid, tempFlowUuid, tempItem.name);\n                    tempItem.nextStep = tempFlowUuid;\n                }\n            },\n\n\n            addExpandOneTempFlowItem(preFlowItem, left, expandFlowItemName) {\n                let tempFlowUuid = this.createFlowItem(FLOW_ITEM_TYPE.tempNode, preFlowItem.uuid, {left: left});\n                this.draggableFlowConnect(preFlowItem.uuid, tempFlowUuid);\n                this.createFlowItemLabel(preFlowItem.uuid, tempFlowUuid, expandFlowItemName);\n                return tempFlowUuid;\n            },\n\n            // add flow connection and label\n            addFlowItemConnect(prevId, nextId) {\n                this.draggableFlowConnect(prevId, nextId, true);\n                this.createFlowConnectionLabel(prevId, nextId);\n            },\n\n            /**\n             * handle update change flow position by drag\n             * @param flowItem\n             * @param evt\n             */\n            handleChangeFlowPosition(flowItem, evt) {\n                const target = evt.currentTarget;\n                let left = ('' + target.style.left).replace('px', '');\n                let top = ('' + target.style.top).replace('px', '');\n                flowItem.left = Number(left);\n                flowItem.top = Number(top);\n\n                let firstTime = target.dataset.firstTime;\n                let lastTime = new Date().getTime();\n\n                target.dataset.isClick = lastTime - firstTime < 200;\n            },\n\n            handleFlowMoveDown(evt) {\n                const target = evt.currentTarget;\n                target.dataset.firstTime = new Date().getTime();\n            },\n\n            handleTempFlowFormData() {\n                let $flowEditComponent = this.$refs.flowEditComponent;\n\n                if (!$flowEditComponent || !$flowEditComponent.validateFormData) {\n                    return;\n                }\n\n                // validate\n                $flowEditComponent.validateFormData().then(() => {\n                    let formData = $flowEditComponent.formData();\n\n                    // between\n                    if (this.dialogObj.isBetween) {\n                        this.handleAddBetweenFlowItem({\n                            flowItemType: this.dialogObj.editType,\n                            preFlowId: this.dialogObj.flowPreUuid,\n                            nextFlowId: this.dialogObj.flowNextUuid,\n                            formData\n                        });\n                    } else {\n                        // click item\n                        let flowItem = this.getFlow(this.dialogObj.flowUUid);\n                        // update form data\n                        flowItem.formData = formData;\n                        // create\n                        if (flowItem.type === FLOW_ITEM_TYPE.tempNode) {\n                            this.handleAddFlowItem(this.dialogObj.editType, flowItem.uuid);\n                        } else {\n                            // update flow item\n                            this.handleUpdateFlowItem({\n                                flowItemType: this.dialogObj.editType,\n                                tempFlowId: flowItem.uuid\n                            });\n                        }\n                    }\n                    this.initDialog();\n                }).catch(() => {\n\n                });\n            },\n\n            handleCloseDialog() {\n                this.initDialog();\n            },\n\n            //\n            handleGoList() {\n                this.dialogObj.editType = FLOW_ITEM_TYPE.list;\n            },\n\n            showDialog(obj) {\n                if (obj.isBetween) {\n                    this.dialogObj.isBetween = true;\n                    this.dialogObj.flowPreUuid = obj.flowPreUuid;\n                    this.dialogObj.flowNextUuid = obj.flowNextUuid;\n                    this.dialogObj.editType = obj.flowItemType || FLOW_ITEM_TYPE.list;\n                } else {\n                    //\n                    if (obj.flowItemType === FLOW_ITEM_TYPE.endNode) {\n                        this.handleAddFlowItem(obj.flowItemType, obj.flowUuid);\n                        return;\n                    }\n                    this.dialogObj.editType = obj.flowItemType;\n                    this.dialogObj.flowUUid = obj.flowUuid;\n                    //\n                    if (obj.flowFormData) {\n                        this.dialogObj.editForm = obj.flowFormData;\n                    }\n\n                    if (obj.flowItemType === FLOW_ITEM_TYPE.tempNode) {\n                        this.dialogObj.editType = FLOW_ITEM_TYPE.list;\n                    }\n                }\n\n                this.dialogObj.visible = true;\n            },\n\n            initDialog() {\n                this.dialogObj.visible = false;\n                this.dialogObj.flowUUid = undefined;\n                this.dialogObj.editType = undefined;\n                this.dialogObj.isBetween = false;\n                this.dialogObj.flowPreUuid = undefined;\n            },\n\n\n            formatData() {\n                let result = {};\n\n                let positionObj = {};\n                let steps = [];\n                let name = '';\n                let flowList = clone(this.flowList);\n                flowList.forEach((flowItem) => {\n                    //\n                    if (flowItem.type === FLOW_ITEM_TYPE.startNode) {\n                        name = flowItem.formData.stepName;\n                    }\n\n                    let step = {\n                        elementId: flowItem.id,\n                        stepId: flowItem.uuid,\n                    };\n\n                    if (flowItem.next.length > 1) {\n                        // next step\n                        if (this.isIfFlowItem(flowItem.type)) {\n                            let ruleGroups = flowItem.formData.ruleGroups || [];\n                            let nextStepLeft = {\n                                nextStep: flowItem.nextIfId,\n                                name: '是',\n                                isDefault: false,\n                                ruleGroups: ruleGroups\n                            };\n                            let nextStepRight = {\n                                nextStep: flowItem.nextElseId,\n                                name: '否',\n                                isDefault: true,\n                                ruleGroups: []\n                            };\n                            // if else\n                            step.nextSteps = [nextStepLeft, nextStepRight];\n                            step.stepName = flowItem.formData.stepName;\n                            step.stepJson = JSON.stringify({ifNodeTitle: flowItem.formData.ifNodeTitle});\n                        } else if (this.isExpandFlowItem(flowItem.type)) {\n                            // expand flow item\n                            let ruleGroupList = flowItem.formData.ruleGroupList;\n                            let nextSteps = [];\n                            ruleGroupList.forEach((ruleGroup) => {\n                                let item = {\n                                    nextStep: ruleGroup.nextStep, //\n                                    name: ruleGroup.name,\n                                    ruleGroups: ruleGroup.ruleGroups,\n                                    isDefault: !!ruleGroup.isDefault\n                                };\n                                nextSteps.push(item);\n                            });\n                            step.nextSteps = nextSteps;\n                            step.stepName = flowItem.formData.stepName;\n                        } else {\n                            // 数组\n                            step.nextSteps = flowItem.next.map((id) => {\n                                return {\n                                    nextStep: id\n                                };\n                            });\n                        }\n                    } else {\n                        step.nextStep = flowItem.next[0] || null;\n                    }\n\n                    // if and expand\n                    if (!this.isIfFlowItem(flowItem.type) && !this.isExpandFlowItem(flowItem.type)) {\n                        step = Object.assign(step, flowItem.formData);\n                    }\n\n                    steps.push(step);\n                    positionObj[flowItem.uuid] = {\n                        left: flowItem.left,\n                        top: flowItem.top\n                    };\n                });\n                result.position = positionObj;\n                result.steps = steps;\n\n                return result;\n            },\n\n            handleMinusCanvas() {\n                if (this.canvasDataRoom <= 50) {\n                    return;\n                }\n\n                this.canvasDataRoom = this.canvasDataRoom - 10;\n            },\n\n            handlePlusCanvas() {\n                if (this.canvasDataRoom === 100) {\n                    return;\n                }\n                this.canvasDataRoom = this.canvasDataRoom + 10;\n\n            },\n\n\n            handleSort() {\n                // this.$alert('开发中。。。')\n                this.$_updatePosition();\n            },\n\n            handleClear() {\n                this.$confirm('确定要清空数据,重做吗？', '提示', {\n                    confirmButtonText: '确定',\n                    cancelButtonText: '取消',\n                    type: 'warning'\n                }).then(() => {\n                    this.$_doClear();\n                }).catch(() => {\n\n                });\n            },\n\n            handleUndo() {\n                this.$alert('开发中......');\n            },\n\n            $_updatePosition() {\n                const startNode = _.find(this.flowList, (flowItem) => {\n                    return this.isStartFlowItem(flowItem);\n                });\n\n                if (startNode) {\n                    this.$_updatePositionItemAndNext(startNode);\n                    this.$_plumbRepaintEverything();\n                }\n            },\n\n            $_updatePositionItemAndNext(flowItem) {\n                if (this.isStartFlowItem(flowItem)) {\n                    flowItem.top = FLOW_START_STEP_TOP;\n                    flowItem.left = this.getFlowItemInitLeft();\n                } else {\n                    const preFlowItem = this.getFlow(flowItem.prev[0]);\n\n                    // pre flow item\n                    if (preFlowItem) {\n                        // top\n                        flowItem.top = preFlowItem.top + FLOW_STEP_LENGTH;\n                        if (this.isIfFlowItem(preFlowItem.type)) {\n                            if (flowItem.uuid === preFlowItem.nextIfId) {\n                                flowItem.left = preFlowItem.left - FLOW_LEFT_STEP_LENGTH;\n                                if (this.isIfFlowItem(flowItem.type)) {\n                                    flowItem.left -= FLOW_IF_OFFSET_LENGTH;\n                                }\n                            } else {\n                                flowItem.left = preFlowItem.left + FLOW_LEFT_STEP_LENGTH;\n                                if (this.isIfFlowItem(flowItem.type)) {\n                                    flowItem.left += FLOW_IF_OFFSET_LENGTH;\n                                }\n                            }\n                        } else if (this.isExpandFlowItem(preFlowItem.type)) {\n\n                        } else {\n                            flowItem.left = preFlowItem.left;\n                        }\n\n                    }\n                }\n\n                flowItem.next.forEach((uuid) => {\n                    const _flowItem = this.getFlow(uuid);\n                    if (_flowItem) {\n                        this.$_updatePositionItemAndNext(_flowItem);\n                    }\n                })\n            },\n\n\n            $_doClear() {\n                const startNode = _.find(this.flowList, (flowItem) => {\n                    return this.isStartFlowItem(flowItem);\n                });\n\n                if (startNode) {\n                    this.deleteNextFlowItem(startNode.uuid);\n                    this.$nextTick(() => {\n                        this.initFlow();\n                    })\n                }\n            },\n\n            handleGetData() {\n                const formData = this.formatData();\n                const formatter = new JSONFormatter(formData, 3);\n                this.dialogVisible = true;\n                this.$nextTick(() => {\n                    this.$refs.preShow.appendChild(formatter.render());\n                })\n            },\n\n            //\n            _message(msg, type) {\n                this.$message({\n                    type: type || 'error',\n                    message: msg\n                });\n            },\n\n            isOnePreOneNext(flowItem) {\n                return flowItem.groupType === FLOW_TYPE.action ||\n                    flowItem.type === FLOW_ITEM_TYPE.waitNode;\n            },\n\n            isTempFlowItem(flowItem) {\n                return flowItem.type === FLOW_ITEM_TYPE.tempNode;\n            },\n\n            isStartFlowItem(flowItem) {\n                return flowItem.type === FLOW_ITEM_TYPE.startNode;\n            },\n\n            isEndFlowItem(flowItem) {\n                return flowItem.type === FLOW_ITEM_TYPE.endNode;\n            },\n\n            isIfFlowItem(flowItemType) {\n                return flowItemType === FLOW_ITEM_TYPE.ifNode;\n            },\n\n            isExpandFlowItem(flowItemType) {\n                return flowItemType === FLOW_ITEM_TYPE.expandNode;\n            },\n\n            //\n            isHasMoreNextFlowItem(flowItem) {\n                return this.isHasMoreNextFlowItemByType(flowItem.type);\n            },\n            isHasMoreNextFlowItemByType(flowItemType) {\n                return this.isIfFlowItem(flowItemType) || this.isExpandFlowItem(flowItemType);\n            },\n\n            //\n            isHasStepCountFlowItem(flowItem) {\n                return flowItem.groupType === FLOW_TYPE.action || flowItem.type === FLOW_ITEM_TYPE.startNode;\n            }\n        }\n    }\n</script>\n\n<style lang=\"sass\">\n    @import \"../styles/workflow.scss\"\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Workflow.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Workflow.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Workflow.vue?vue&type=template&id=56071a14&\"\nimport script from \"./Workflow.vue?vue&type=script&lang=js&\"\nexport * from \"./Workflow.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Workflow.vue?vue&type=style&index=0&lang=sass&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div id=\"app\">\n      <workflow></workflow>\n    </div>\n</template>\n\n<script>\n    import Workflow from './components/Workflow';\n\n    export default {\n        name: 'App',\n        components: {\n            Workflow\n        }\n    }\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=518081d0&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\n\nVue.config.productionTip = false;\n\nVue.use(ElementUI);\n\nnew Vue({\n    render: h => h(App),\n}).$mount('#app');\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./listForm.vue?vue&type=style&index=0&id=1b772e52&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./listForm.vue?vue&type=style&index=0&id=1b772e52&lang=scss&scoped=true&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Workflow.vue?vue&type=style&index=0&lang=sass&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Workflow.vue?vue&type=style&index=0&lang=sass&\"","const Sortable = require(\"sortablejs\");\n\nfunction getConsole() {\n    if (typeof window !== \"undefined\") {\n        return window.console;\n    }\n    return global.console;\n}\n\nconst console = getConsole();\n\nfunction buildAttribute(object, propName, value) {\n    if (value == undefined) {\n        return object;\n    }\n    object = object == null ? {} : object;\n    object[propName] = value;\n    return object;\n}\n\n// remove node\nfunction removeNode(node) {\n    if (node.parentElement !== null) {\n        node.parentElement.removeChild(node);\n    }\n}\n\n// insert node at\nfunction insertNodeAt(fatherNode, node, position) {\n    const refNode =\n        position === 0\n            ? fatherNode.children[0]\n            : fatherNode.children[position - 1].nextSibling;\n    fatherNode.insertBefore(node, refNode);\n}\n\n// compute vm index\nfunction computeVmIndex(vnodes, element) {\n    return vnodes.map(elt => elt.elm).indexOf(element);\n}\n\nfunction computeIndexes(slots, children, isTransition) {\n    if (!slots) {\n        return [];\n    }\n\n    const elmFromNodes = slots.map(elt => elt.elm);\n    const rawIndexes = [...children].map(elt => elmFromNodes.indexOf(elt));\n    return isTransition ? rawIndexes.filter(ind => ind !== -1) : rawIndexes;\n}\n\nfunction emit(evtName, evtData) {\n    this.$nextTick(() => this.$emit(evtName.toLowerCase(), evtData));\n}\n\nfunction delegateAndEmit(evtName) {\n    return evtData => {\n        if (this.realList !== null) {\n            this[\"onDrag\" + evtName](evtData);\n        }\n        emit.call(this, evtName, evtData);\n    };\n}\n\nfunction groupIsClone(group) {\n    if (!group) {\n        return false;\n    }\n    const { pull } = group;\n    if (typeof pull === \"function\") {\n        return pull() === \"clone\";\n    }\n    return pull === \"clone\";\n}\n\nconst eventsListened = [\"Start\", \"Add\", \"Remove\", \"Update\", \"End\"];\nconst eventsToEmit = [\"Choose\", \"Sort\", \"Filter\", \"Clone\"];\nconst readonlyProperties = [\"Move\", ...eventsListened, ...eventsToEmit].map(\n    evt => \"on\" + evt\n);\nvar draggingElement = null;\n\nconst props = {\n    options: Object,\n    list: {\n        type: Array,\n        required: false,\n        default: null\n    },\n    value: {\n        type: Array,\n        required: false,\n        default: null\n    },\n    noTransitionOnDrag: {\n        type: Boolean,\n        default: false\n    },\n    clone: {\n        type: Function,\n        default: original => {\n            return original;\n        }\n    },\n    element: {\n        type: String,\n        default: \"div\"\n    },\n    tag: {\n        type: String,\n        default: null\n    },\n    move: {\n        type: Function,\n        default: null\n    },\n    componentData: {\n        type: Object,\n        required: false,\n        default: null\n    }\n};\n\nconst draggableComponent = {\n    name: \"draggable\",\n\n    inheritAttrs: true,\n\n    props,\n\n    data() {\n        return {\n            transitionMode: false,\n            noneFunctionalComponentMode: false,\n            init: false,\n            isCloning: false\n        };\n    },\n\n    render(h) {\n        const slots = this.$slots.default;\n        if (slots && slots.length === 1) {\n            const child = slots[0];\n            if (\n                child.componentOptions &&\n                [\"transition-group\", \"TransitionGroup\"].includes(\n                    child.componentOptions.tag\n                )\n            ) {\n                this.transitionMode = true;\n            }\n        }\n        let headerOffset = 0;\n        let children = slots;\n        const { header, footer } = this.$slots;\n        if (header) {\n            headerOffset = header.length;\n            children = children ? [...header, ...children] : [...header];\n        }\n        if (footer) {\n            children = children ? [...children, ...footer] : [...footer];\n        }\n        this.headerOffset = headerOffset;\n        var attributes = null;\n        const update = (name, value) => {\n            attributes = buildAttribute(attributes, name, value);\n        };\n        if (this.componentData) {\n            const { on, props } = this.componentData;\n            update(\"on\", on);\n            update(\"props\", props);\n        }\n        return h(this.getTag(), attributes, children);\n    },\n\n    created() {\n        if (this.list !== null && this.value !== null) {\n            console.error(\n                \"Value and list props are mutually exclusive! Please set one or another.\"\n            );\n        }\n\n        if (this.element !== \"div\") {\n            console.warn(\n                \"Element props is deprecated please use tag props instead. See https://github.com/SortableJS/Vue.Draggable/blob/master/documentation/migrate.md#element-props\"\n            );\n        }\n\n        if (this.options !== undefined) {\n            console.warn(\n                \"Options props is deprecated, add sortable options directly as vue.draggable item, or use v-bind. See https://github.com/SortableJS/Vue.Draggable/blob/master/documentation/migrate.md#options-props\"\n            );\n        }\n    },\n\n    mounted() {\n        this.noneFunctionalComponentMode =\n            this.getTag().toLowerCase() !== this.$el.nodeName.toLowerCase();\n        if (this.noneFunctionalComponentMode && this.transitionMode) {\n            throw new Error(\n                `Transition-group inside component is not supported. Please alter tag value or remove transition-group. Current tag value: ${this.getTag()}`\n            );\n        }\n        var optionsAdded = {};\n        eventsListened.forEach(elt => {\n            optionsAdded[\"on\" + elt] = delegateAndEmit.call(this, elt);\n        });\n\n        eventsToEmit.forEach(elt => {\n            optionsAdded[\"on\" + elt] = emit.bind(this, elt);\n        });\n\n        const options = Object.assign({}, this.options, this.$attrs, optionsAdded, {\n            onMove: (evt, originalEvent) => {\n                return this.onDragMove(evt, originalEvent);\n            }\n        });\n        !(\"draggable\" in options) && (options.draggable = \">*\");\n        this._sortable = new Sortable(this.rootContainer, options);\n        this.computeIndexes();\n    },\n\n    beforeDestroy() {\n        if (this._sortable !== undefined) this._sortable.destroy();\n    },\n\n    computed: {\n        rootContainer() {\n            return this.transitionMode ? this.$el.children[0] : this.$el;\n        },\n\n        realList() {\n            return this.list ? this.list : this.value;\n        }\n    },\n\n    watch: {\n        options: {\n            handler(newOptionValue) {\n                this.updateOptions(newOptionValue);\n            },\n            deep: true\n        },\n\n        $attrs: {\n            handler(newOptionValue) {\n                this.updateOptions(newOptionValue);\n            },\n            deep: true\n        },\n\n        realList() {\n            this.computeIndexes();\n        }\n    },\n\n    methods: {\n        getTag() {\n            return this.tag || this.element;\n        },\n\n        getIsCloning() {\n            const { group } = this.$attrs;\n            const groupConsideringOption = group || this.getOptionGroup();\n            return groupIsClone(groupConsideringOption);\n        },\n\n        getOptionGroup() {\n            const { options } = this;\n            if (!options) {\n                return undefined;\n            }\n            return options.group;\n        },\n\n        updateOptions(newOptionValue) {\n            for (var property in newOptionValue) {\n                if (readonlyProperties.indexOf(property) == -1) {\n                    this._sortable.option(property, newOptionValue[property]);\n                }\n            }\n        },\n\n        getChildrenNodes() {\n            if (!this.init) {\n                this.noneFunctionalComponentMode =\n                    this.noneFunctionalComponentMode && this.$children.length == 1;\n                this.init = true;\n            }\n\n            if (this.noneFunctionalComponentMode) {\n                return this.$children[0].$slots.default;\n            }\n            const rawNodes = this.$slots.default;\n            return this.transitionMode ? rawNodes[0].child.$slots.default : rawNodes;\n        },\n\n        computeIndexes() {\n            this.$nextTick(() => {\n                this.visibleIndexes = computeIndexes(\n                    this.getChildrenNodes(),\n                    this.rootContainer.children,\n                    this.transitionMode\n                );\n            });\n        },\n\n        getUnderlyingVm(htmlElt) {\n            const index = computeVmIndex(this.getChildrenNodes() || [], htmlElt);\n            if (index === -1) {\n                //Edge case during move callback: related element might be\n                //an element different from collection\n                return null;\n            }\n            const element = this.realList[index];\n            return { index, element };\n        },\n\n        getUnderlyingPotencialDraggableComponent({ __vue__ }) {\n            if (\n                !__vue__ ||\n                !__vue__.$options ||\n                __vue__.$options._componentTag !== \"transition-group\"\n            ) {\n                return __vue__;\n            }\n            return __vue__.$parent;\n        },\n\n        emitChanges(evt) {\n            this.$nextTick(() => {\n                this.$emit(\"change\", evt);\n            });\n        },\n\n        alterList(onList) {\n            if (this.list) {\n                onList(this.list);\n            } else {\n                const newList = [...this.value];\n                onList(newList);\n                this.$emit(\"input\", newList);\n            }\n        },\n\n        spliceList() {\n            const spliceList = list => list.splice(...arguments);\n            this.alterList(spliceList);\n        },\n\n        updatePosition(oldIndex, newIndex) {\n            const updatePosition = list =>\n                list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\n            this.alterList(updatePosition);\n        },\n\n        getRelatedContextFromMoveEvent({ to, related }) {\n            const component = this.getUnderlyingPotencialDraggableComponent(to);\n            if (!component) {\n                return { component };\n            }\n            const list = component.realList;\n            const context = { list, component };\n            if (to !== related && list && component.getUnderlyingVm) {\n                const destination = component.getUnderlyingVm(related);\n                if (destination) {\n                    return Object.assign(destination, context);\n                }\n            }\n\n            return context;\n        },\n\n        getVmIndex(domIndex) {\n            const indexes = this.visibleIndexes;\n            const numberIndexes = indexes.length;\n            return domIndex > numberIndexes - 1 ? numberIndexes : indexes[domIndex];\n        },\n\n        getComponent() {\n            return this.$slots.default[0].componentInstance;\n        },\n\n        resetTransitionData(index) {\n            if (!this.noTransitionOnDrag || !this.transitionMode) {\n                return;\n            }\n            var nodes = this.getChildrenNodes();\n            nodes[index].data = null;\n            const transitionContainer = this.getComponent();\n            transitionContainer.children = [];\n            transitionContainer.kept = undefined;\n        },\n\n        onDragStart(evt) {\n            this.context = this.getUnderlyingVm(evt.item);\n            this.isCloning = this.getIsCloning();\n            evt.item._underlying_vm_ = this.clone(this.context.element);\n            draggingElement = evt.item;\n        },\n\n        onDragAdd(evt) {\n            const element = evt.item._underlying_vm_;\n            if (element === undefined) {\n                return;\n            }\n            removeNode(evt.item);\n            const newIndex = this.getVmIndex(evt.newIndex);\n            this.spliceList(newIndex, 0, element);\n            this.computeIndexes();\n            const added = { element, newIndex };\n            this.emitChanges({ added });\n        },\n\n        onDragRemove(evt) {\n            insertNodeAt(this.rootContainer, evt.item, evt.oldIndex);\n            if (this.isCloning) {\n                removeNode(evt.clone);\n                return;\n            }\n            const oldIndex = this.context.index;\n            this.spliceList(oldIndex, 1);\n            const removed = { element: this.context.element, oldIndex };\n            this.resetTransitionData(oldIndex);\n            this.emitChanges({ removed });\n        },\n\n        onDragUpdate(evt) {\n            removeNode(evt.item);\n            insertNodeAt(evt.from, evt.item, evt.oldIndex);\n            const oldIndex = this.context.index;\n            const newIndex = this.getVmIndex(evt.newIndex);\n            this.updatePosition(oldIndex, newIndex);\n            const moved = { element: this.context.element, oldIndex, newIndex };\n            this.emitChanges({ moved });\n        },\n\n        updateProperty(evt, propertyName) {\n            evt.hasOwnProperty(propertyName) &&\n            (evt[propertyName] += this.headerOffset);\n        },\n\n        computeFutureIndex(relatedContext, evt) {\n            if (!relatedContext.element) {\n                return 0;\n            }\n            const domChildren = [...evt.to.children].filter(\n                el => el.style[\"display\"] !== \"none\"\n            );\n            const currentDOMIndex = domChildren.indexOf(evt.related);\n            const currentIndex = relatedContext.component.getVmIndex(currentDOMIndex);\n            const draggedInList = domChildren.indexOf(draggingElement) != -1;\n            return draggedInList || !evt.willInsertAfter\n                ? currentIndex\n                : currentIndex + 1;\n        },\n\n        onDragMove(evt, originalEvent) {\n            const onMove = this.move;\n            if (!onMove || !this.realList) {\n                return true;\n            }\n\n            const relatedContext = this.getRelatedContextFromMoveEvent(evt);\n            const draggedContext = this.context;\n            const futureIndex = this.computeFutureIndex(relatedContext, evt);\n            Object.assign(draggedContext, { futureIndex });\n            Object.assign(evt, { relatedContext, draggedContext });\n            return onMove(evt, originalEvent);\n        },\n\n        onDragEnd() {\n            this.computeIndexes();\n            draggingElement = null;\n        }\n    }\n};\n\n\nexport default draggableComponent;\n"],"sourceRoot":""}